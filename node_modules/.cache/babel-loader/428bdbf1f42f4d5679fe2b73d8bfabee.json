{"ast":null,"code":"import \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\nimport actions from './actions';\nconst addNotificationSuccess = () => {\n  _notification.success({\n    message: 'Your Record hasbeen Submited'\n  });\n};\nconst addNotificationError = err => {\n  _notification.error({\n    message: err\n  });\n};\nconst deleteNotificationSuccess = () => {\n  _notification.success({\n    message: 'Your Record hasbeen Deleted'\n  });\n};\nconst deleteNotificationError = err => {\n  _notification.error({\n    message: err\n  });\n};\nconst updateNotificationSuccess = () => {\n  _notification.success({\n    message: 'Your Record hasbeen updated'\n  });\n};\nconst updateNotificationError = err => {\n  _notification.error({\n    message: err\n  });\n};\nconst {\n  fbAddBegin,\n  fbAddSuccess,\n  fbAddErr,\n  fbReadBegin,\n  fbReadSuccess,\n  fbReadErr,\n  fbUpdateBegin,\n  fbUpdateSuccess,\n  fbUpdateErr,\n  fbDeleteBegin,\n  fbDeleteSuccess,\n  fbDeleteErr,\n  fbSingleDataBegin,\n  fbSingleDataSuccess,\n  fbSingleDataErr,\n  fbUploadBegin,\n  fbUploadSuccess,\n  fbUploadErr,\n  fbSearchBegin,\n  fbSearchSuccess,\n  fbSearchErr\n} = actions;\nconst fbDataSubmit = data => {\n  return async (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const db = getFirestore();\n    try {\n      await dispatch(fbAddBegin());\n      await db.collection('crud').doc(`${data.id}`).set(data);\n      await dispatch(fbAddSuccess(data));\n      await addNotificationSuccess();\n    } catch (err) {\n      await dispatch(fbAddErr(err));\n      await addNotificationError(err);\n    }\n  };\n};\nconst fbDataRead = () => {\n  return async (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const db = getFirestore();\n    const data = [];\n    try {\n      await dispatch(fbReadBegin());\n      const query = await db.collection('crud').get();\n      await query.forEach(doc => {\n        data.push(doc.data());\n      });\n      await dispatch(fbReadSuccess(data));\n    } catch (err) {\n      await dispatch(fbReadErr(err));\n    }\n  };\n};\nconst fbDataSearch = value => {\n  return async (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const db = getFirestore();\n    const data = [];\n    try {\n      await dispatch(fbSearchBegin());\n      const query = await db.collection('crud').get();\n      await query.forEach(doc => {\n        data.push(doc.data());\n      });\n      const searchValue = data.filter(item => item.name.toLowerCase().startsWith(value.toLowerCase()));\n      await dispatch(fbSearchSuccess(searchValue));\n    } catch (err) {\n      await dispatch(fbSearchErr(err));\n    }\n  };\n};\nconst fbDataUpdate = (id, data) => {\n  return async (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const db = getFirestore();\n    try {\n      await dispatch(fbUpdateBegin());\n      await db.collection('crud').doc(`${id}`).update({\n        ...data\n      });\n      const query = await db.collection('crud').where('id', '==', id).get();\n      await query.forEach(doc => {\n        dispatch(fbUpdateSuccess(doc.data()));\n      });\n      await updateNotificationSuccess();\n    } catch (err) {\n      await dispatch(fbUpdateErr(err));\n      await updateNotificationError(err);\n    }\n  };\n};\nconst fbDataDelete = id => {\n  return async (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const db = getFirestore();\n    const data = [];\n    try {\n      await dispatch(fbDeleteBegin());\n      await db.collection('crud').doc(`${id}`).delete();\n      const query = await db.collection('crud').get();\n      await query.forEach(doc => {\n        data.push(doc.data());\n      });\n      await dispatch(fbDeleteSuccess(data));\n      await deleteNotificationSuccess();\n      await fbDataRead();\n    } catch (err) {\n      await dispatch(fbDeleteErr(err));\n      await deleteNotificationError(err);\n    }\n  };\n};\nconst fbDataSingle = id => {\n  return async (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const db = getFirestore();\n    try {\n      await dispatch(fbSingleDataBegin());\n      const query = await db.collection('crud').where('id', '==', id).get();\n      await query.forEach(doc => {\n        dispatch(fbSingleDataSuccess(doc.data()));\n      });\n    } catch (err) {\n      await dispatch(fbSingleDataErr(err));\n    }\n  };\n};\nconst fbFileUploder = imageAsFile => {\n  return async (dispatch, getState, {\n    getFirebase,\n    getFirestore,\n    storage\n  }) => {\n    try {\n      await dispatch(fbUploadBegin());\n      const uploadTask = storage().ref(`/images/${imageAsFile.name}`).put(imageAsFile);\n      await uploadTask.on('state_changed', snapShot => {\n        // takes a snap shot of the process as it is happening\n        console.log(snapShot);\n      }, err => {\n        // catches the errors\n        console.log(err);\n      }, () => {\n        storage().ref('images').child(imageAsFile.name).getDownloadURL().then(fireBaseUrl => {\n          dispatch(fbUploadSuccess(fireBaseUrl));\n        });\n      });\n    } catch (err) {\n      await dispatch(fbUploadErr(err));\n    }\n  };\n};\nconst fbFileClear = () => {\n  return async dispatch => {\n    try {\n      await dispatch(fbUploadBegin());\n      dispatch(fbUploadSuccess(null));\n    } catch (err) {\n      await dispatch(fbUploadErr(err));\n    }\n  };\n};\nexport { fbDataSubmit, fbDataSearch, fbDataDelete, fbDataSingle, fbDataUpdate, fbDataRead, fbFileUploder, fbFileClear };\n;\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n  if (!reactHotLoader) {\n    return;\n  }\n  reactHotLoader.register(addNotificationSuccess, \"addNotificationSuccess\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(addNotificationError, \"addNotificationError\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(deleteNotificationSuccess, \"deleteNotificationSuccess\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(deleteNotificationError, \"deleteNotificationError\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(updateNotificationSuccess, \"updateNotificationSuccess\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(updateNotificationError, \"updateNotificationError\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbAddBegin, \"fbAddBegin\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbAddSuccess, \"fbAddSuccess\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbAddErr, \"fbAddErr\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbReadBegin, \"fbReadBegin\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbReadSuccess, \"fbReadSuccess\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbReadErr, \"fbReadErr\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbUpdateBegin, \"fbUpdateBegin\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbUpdateSuccess, \"fbUpdateSuccess\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbUpdateErr, \"fbUpdateErr\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbDeleteBegin, \"fbDeleteBegin\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbDeleteSuccess, \"fbDeleteSuccess\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbDeleteErr, \"fbDeleteErr\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbSingleDataBegin, \"fbSingleDataBegin\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbSingleDataSuccess, \"fbSingleDataSuccess\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbSingleDataErr, \"fbSingleDataErr\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbUploadBegin, \"fbUploadBegin\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbUploadSuccess, \"fbUploadSuccess\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbUploadErr, \"fbUploadErr\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbSearchBegin, \"fbSearchBegin\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbSearchSuccess, \"fbSearchSuccess\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbSearchErr, \"fbSearchErr\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbDataSubmit, \"fbDataSubmit\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbDataRead, \"fbDataRead\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbDataSearch, \"fbDataSearch\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbDataUpdate, \"fbDataUpdate\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbDataDelete, \"fbDataDelete\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbDataSingle, \"fbDataSingle\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbFileUploder, \"fbFileUploder\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n  reactHotLoader.register(fbFileClear, \"fbFileClear\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\redux\\\\firebase\\\\firestore\\\\actionCreator.js\");\n})();\n;\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["actions","addNotificationSuccess","_notification","success","message","addNotificationError","err","error","deleteNotificationSuccess","deleteNotificationError","updateNotificationSuccess","updateNotificationError","fbAddBegin","fbAddSuccess","fbAddErr","fbReadBegin","fbReadSuccess","fbReadErr","fbUpdateBegin","fbUpdateSuccess","fbUpdateErr","fbDeleteBegin","fbDeleteSuccess","fbDeleteErr","fbSingleDataBegin","fbSingleDataSuccess","fbSingleDataErr","fbUploadBegin","fbUploadSuccess","fbUploadErr","fbSearchBegin","fbSearchSuccess","fbSearchErr","fbDataSubmit","data","dispatch","getState","getFirebase","getFirestore","db","collection","doc","id","set","fbDataRead","query","get","forEach","push","fbDataSearch","value","searchValue","filter","item","name","toLowerCase","startsWith","fbDataUpdate","update","where","fbDataDelete","delete","fbDataSingle","fbFileUploder","imageAsFile","storage","uploadTask","ref","put","on","snapShot","console","log","child","getDownloadURL","then","fireBaseUrl","fbFileClear","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["C:/Users/diskk/OneDrive/Desktop/New folder/Transport_modal/src/redux/firebase/firestore/actionCreator.js"],"sourcesContent":["import { notification } from 'antd';\r\nimport actions from './actions';\r\n\r\nconst addNotificationSuccess = () => {\r\n  notification.success({\r\n    message: 'Your Record hasbeen Submited',\r\n  });\r\n};\r\n\r\nconst addNotificationError = err => {\r\n  notification.error({\r\n    message: err,\r\n  });\r\n};\r\n\r\nconst deleteNotificationSuccess = () => {\r\n  notification.success({\r\n    message: 'Your Record hasbeen Deleted',\r\n  });\r\n};\r\n\r\nconst deleteNotificationError = err => {\r\n  notification.error({\r\n    message: err,\r\n  });\r\n};\r\n\r\nconst updateNotificationSuccess = () => {\r\n  notification.success({\r\n    message: 'Your Record hasbeen updated',\r\n  });\r\n};\r\n\r\nconst updateNotificationError = err => {\r\n  notification.error({\r\n    message: err,\r\n  });\r\n};\r\n\r\nconst {\r\n  fbAddBegin,\r\n  fbAddSuccess,\r\n  fbAddErr,\r\n\r\n  fbReadBegin,\r\n  fbReadSuccess,\r\n  fbReadErr,\r\n\r\n  fbUpdateBegin,\r\n  fbUpdateSuccess,\r\n  fbUpdateErr,\r\n\r\n  fbDeleteBegin,\r\n  fbDeleteSuccess,\r\n  fbDeleteErr,\r\n\r\n  fbSingleDataBegin,\r\n  fbSingleDataSuccess,\r\n  fbSingleDataErr,\r\n\r\n  fbUploadBegin,\r\n  fbUploadSuccess,\r\n  fbUploadErr,\r\n\r\n  fbSearchBegin,\r\n  fbSearchSuccess,\r\n  fbSearchErr,\r\n} = actions;\r\n\r\nconst fbDataSubmit = data => {\r\n  return async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const db = getFirestore();\r\n    try {\r\n      await dispatch(fbAddBegin());\r\n      await db\r\n        .collection('crud')\r\n        .doc(`${data.id}`)\r\n        .set(data);\r\n      await dispatch(fbAddSuccess(data));\r\n      await addNotificationSuccess();\r\n    } catch (err) {\r\n      await dispatch(fbAddErr(err));\r\n      await addNotificationError(err);\r\n    }\r\n  };\r\n};\r\n\r\nconst fbDataRead = () => {\r\n  return async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const db = getFirestore();\r\n    const data = [];\r\n    try {\r\n      await dispatch(fbReadBegin());\r\n      const query = await db.collection('crud').get();\r\n      await query.forEach(doc => {\r\n        data.push(doc.data());\r\n      });\r\n      await dispatch(fbReadSuccess(data));\r\n    } catch (err) {\r\n      await dispatch(fbReadErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst fbDataSearch = value => {\r\n  return async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const db = getFirestore();\r\n    const data = [];\r\n    try {\r\n      await dispatch(fbSearchBegin());\r\n      const query = await db.collection('crud').get();\r\n      await query.forEach(doc => {\r\n        data.push(doc.data());\r\n      });\r\n      const searchValue = data.filter(item => item.name.toLowerCase().startsWith(value.toLowerCase()));\r\n      await dispatch(fbSearchSuccess(searchValue));\r\n    } catch (err) {\r\n      await dispatch(fbSearchErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst fbDataUpdate = (id, data) => {\r\n  return async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const db = getFirestore();\r\n    try {\r\n      await dispatch(fbUpdateBegin());\r\n      await db\r\n        .collection('crud')\r\n        .doc(`${id}`)\r\n        .update({\r\n          ...data,\r\n        });\r\n\r\n      const query = await db\r\n        .collection('crud')\r\n        .where('id', '==', id)\r\n        .get();\r\n      await query.forEach(doc => {\r\n        dispatch(fbUpdateSuccess(doc.data()));\r\n      });\r\n\r\n      await updateNotificationSuccess();\r\n    } catch (err) {\r\n      await dispatch(fbUpdateErr(err));\r\n      await updateNotificationError(err);\r\n    }\r\n  };\r\n};\r\n\r\nconst fbDataDelete = id => {\r\n  return async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const db = getFirestore();\r\n    const data = [];\r\n    try {\r\n      await dispatch(fbDeleteBegin());\r\n      await db\r\n        .collection('crud')\r\n        .doc(`${id}`)\r\n        .delete();\r\n      const query = await db.collection('crud').get();\r\n      await query.forEach(doc => {\r\n        data.push(doc.data());\r\n      });\r\n      await dispatch(fbDeleteSuccess(data));\r\n      await deleteNotificationSuccess();\r\n      await fbDataRead();\r\n    } catch (err) {\r\n      await dispatch(fbDeleteErr(err));\r\n      await deleteNotificationError(err);\r\n    }\r\n  };\r\n};\r\n\r\nconst fbDataSingle = id => {\r\n  return async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const db = getFirestore();\r\n    try {\r\n      await dispatch(fbSingleDataBegin());\r\n      const query = await db\r\n        .collection('crud')\r\n        .where('id', '==', id)\r\n        .get();\r\n      await query.forEach(doc => {\r\n        dispatch(fbSingleDataSuccess(doc.data()));\r\n      });\r\n    } catch (err) {\r\n      await dispatch(fbSingleDataErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst fbFileUploder = imageAsFile => {\r\n  return async (dispatch, getState, { getFirebase, getFirestore, storage }) => {\r\n    try {\r\n      await dispatch(fbUploadBegin());\r\n      const uploadTask = storage()\r\n        .ref(`/images/${imageAsFile.name}`)\r\n        .put(imageAsFile);\r\n\r\n      await uploadTask.on(\r\n        'state_changed',\r\n        snapShot => {\r\n          // takes a snap shot of the process as it is happening\r\n          console.log(snapShot);\r\n        },\r\n        err => {\r\n          // catches the errors\r\n          console.log(err);\r\n        },\r\n        () => {\r\n          storage()\r\n            .ref('images')\r\n            .child(imageAsFile.name)\r\n            .getDownloadURL()\r\n            .then(fireBaseUrl => {\r\n              dispatch(fbUploadSuccess(fireBaseUrl));\r\n            });\r\n        },\r\n      );\r\n    } catch (err) {\r\n      await dispatch(fbUploadErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst fbFileClear = () => {\r\n  return async dispatch => {\r\n    try {\r\n      await dispatch(fbUploadBegin());\r\n      dispatch(fbUploadSuccess(null));\r\n    } catch (err) {\r\n      await dispatch(fbUploadErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nexport { fbDataSubmit, fbDataSearch, fbDataDelete, fbDataSingle, fbDataUpdate, fbDataRead, fbFileUploder, fbFileClear };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}