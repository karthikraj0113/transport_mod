{"ast":null,"code":"\"use strict\";\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { TileLayer } from 'leaflet';\nimport isEqual from 'fast-deep-equal';\nimport { withLeaflet } from './context';\nimport GridLayer from './GridLayer';\nimport { EVENTS_RE } from './MapEvented';\nvar WMSTileLayer = /*#__PURE__*/function (_GridLayer) {\n  _inheritsLoose(WMSTileLayer, _GridLayer);\n  function WMSTileLayer() {\n    return _GridLayer.apply(this, arguments) || this;\n  }\n  var _proto = WMSTileLayer.prototype;\n  _proto.createLeafletElement = function createLeafletElement(props) {\n    var url = props.url,\n      params = _objectWithoutPropertiesLoose(props, [\"url\"]);\n    var _this$getOptions = this.getOptions(params),\n      _l = _this$getOptions.leaflet,\n      options = _objectWithoutPropertiesLoose(_this$getOptions, [\"leaflet\"]);\n    return new TileLayer.WMS(url, options);\n  };\n  _proto.updateLeafletElement = function updateLeafletElement(fromProps, toProps) {\n    _GridLayer.prototype.updateLeafletElement.call(this, fromProps, toProps);\n    var prevUrl = fromProps.url,\n      _po = fromProps.opacity,\n      _pz = fromProps.zIndex,\n      prevProps = _objectWithoutPropertiesLoose(fromProps, [\"url\", \"opacity\", \"zIndex\"]);\n    var _this$getOptions2 = this.getOptions(prevProps),\n      _pl = _this$getOptions2.leaflet,\n      prevParams = _objectWithoutPropertiesLoose(_this$getOptions2, [\"leaflet\"]);\n    var url = toProps.url,\n      _o = toProps.opacity,\n      _z = toProps.zIndex,\n      props = _objectWithoutPropertiesLoose(toProps, [\"url\", \"opacity\", \"zIndex\"]);\n    var _this$getOptions3 = this.getOptions(props),\n      _l = _this$getOptions3.leaflet,\n      params = _objectWithoutPropertiesLoose(_this$getOptions3, [\"leaflet\"]);\n    if (url !== prevUrl) {\n      this.leafletElement.setUrl(url);\n    }\n    if (!isEqual(params, prevParams)) {\n      this.leafletElement.setParams(params);\n    }\n  };\n  _proto.getOptions = function getOptions(params) {\n    var superOptions = _GridLayer.prototype.getOptions.call(this, params);\n    return Object.keys(superOptions).reduce(function (options, key) {\n      if (!EVENTS_RE.test(key)) {\n        options[key] = superOptions[key];\n      }\n      return options;\n    }, {});\n  };\n  return WMSTileLayer;\n}(GridLayer);\nexport default withLeaflet(WMSTileLayer);","map":null,"metadata":{},"sourceType":"module"}