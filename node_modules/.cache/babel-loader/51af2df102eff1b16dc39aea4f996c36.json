{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n// TODO: this module should depend from social stuff\n\nexports.hasFreeSubscription = hasFreeSubscription;\nexports.connection = connection;\nexports.initClient = initClient;\nexports.clientConnections = clientConnections;\nvar _immutable = require('immutable');\nvar _immutable2 = _interopRequireDefault(_immutable);\nvar _auth0PasswordPolicies = require('auth0-password-policies');\nvar _auth0PasswordPolicies2 = _interopRequireDefault(_auth0PasswordPolicies);\nvar _data_utils = require('../../utils/data_utils');\nvar _index = require('../../connection/social/index');\nvar _enterprise = require('../../connection/enterprise');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar _dataFns = (0, _data_utils.dataFns)(['client']),\n  initNS = _dataFns.initNS,\n  get = _dataFns.get;\nvar DEFAULT_CONNECTION_VALIDATION = {\n  username: {\n    min: 1,\n    max: 15\n  }\n};\nfunction hasFreeSubscription(m) {\n  return ['free', 'dev'].indexOf(get(m, ['tenant', 'subscription'])) > -1;\n}\nfunction connection(m, strategyName, name) {\n  // TODO: this function should take a client, not a map with a client\n  // key.\n  var connections = strategy(m, strategyName).get('connections', (0, _immutable.List)());\n  return connections.find(withName(name)) || (0, _immutable.Map)();\n}\nfunction strategy(m, name) {\n  // TODO: this function should take a client, not a map with a client\n  // key.\n  return m.getIn(['client', 'strategies'], (0, _immutable.List)()).find(withName(name)) || (0, _immutable.Map)();\n}\nfunction withName(name) {\n  return function (x) {\n    return x.get('name') === name;\n  };\n}\nfunction strategyNameToConnectionType(str) {\n  if (str === 'auth0') {\n    return 'database';\n  } else if (str === 'email' || str === 'sms') {\n    return 'passwordless';\n  } else if (_index.STRATEGIES[str]) {\n    return 'social';\n  } else if (_enterprise.STRATEGIES[str]) {\n    return 'enterprise';\n  } else if (['oauth1', 'oauth2'].indexOf(str) !== -1) {\n    return 'social';\n  } else {\n    return 'unknown';\n  }\n}\nfunction formatConnectionValidation() {\n  var connectionValidation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (connectionValidation.username == null) {\n    return null;\n  }\n  var validation = _extends({}, DEFAULT_CONNECTION_VALIDATION, connectionValidation);\n  var defaultMin = DEFAULT_CONNECTION_VALIDATION.username.min;\n  var defaultMax = DEFAULT_CONNECTION_VALIDATION.username.max;\n  validation.username.min = parseInt(validation.username.min, 10) || defaultMin;\n  validation.username.max = parseInt(validation.username.max, 10) || defaultMax;\n  if (validation.username.min > validation.username.max) {\n    validation.username.min = defaultMin;\n    validation.username.max = defaultMax;\n  }\n  return validation;\n}\nvar emptyConnections = _immutable2.default.fromJS({\n  database: [],\n  enterprise: [],\n  passwordless: [],\n  social: [],\n  unknown: [] // TODO: should be oauth2\n});\n\nfunction initClient(m, client) {\n  return initNS(m, formatClient(client));\n}\nfunction formatClient(o) {\n  return new _immutable2.default.fromJS({\n    id: o.id,\n    tenant: {\n      name: o.tenant,\n      subscription: o.subscription\n    },\n    connections: formatClientConnections(o)\n  });\n}\nfunction formatClientConnections(o) {\n  var result = emptyConnections.toJS();\n  var _loop = function _loop() {\n    var _result$connectionTyp;\n    var strategy = o.strategies[i];\n    var connectionType = strategyNameToConnectionType(strategy.name);\n    var connections = strategy.connections.map(function (connection) {\n      return formatClientConnection(connectionType, strategy.name, connection);\n    });\n    (_result$connectionTyp = result[connectionType]).push.apply(_result$connectionTyp, connections);\n  };\n  for (var i = 0; i < (o.strategies || []).length; i++) {\n    _loop();\n  }\n  return result;\n}\nfunction formatClientConnection(connectionType, strategyName, connection) {\n  var result = {\n    name: connection.name,\n    strategy: strategyName,\n    type: connectionType,\n    displayName: connection.display_name\n  };\n  if (connectionType === 'database') {\n    result.passwordPolicy = _auth0PasswordPolicies2.default[connection.passwordPolicy || 'none'];\n    if (connection.password_complexity_options && connection.password_complexity_options.min_length) {\n      result.passwordPolicy.length.minLength = connection.password_complexity_options.min_length;\n    }\n    result.allowSignup = typeof connection.showSignup === 'boolean' ? connection.showSignup : true;\n    result.allowForgot = typeof connection.showForgot === 'boolean' ? connection.showForgot : true;\n    result.requireUsername = typeof connection.requires_username === 'boolean' ? connection.requires_username : false;\n    result.validation = formatConnectionValidation(connection.validation);\n  }\n  if (connectionType === 'enterprise') {\n    var domains = connection.domain_aliases || [];\n    if (connection.domain) {\n      domains.unshift(connection.domain);\n    }\n    result.domains = domains;\n  }\n  return result;\n}\nfunction clientConnections(m) {\n  return get(m, 'connections', emptyConnections);\n}","map":{"version":3,"names":["exports","__esModule","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","hasFreeSubscription","connection","initClient","clientConnections","_immutable","require","_immutable2","_interopRequireDefault","_auth0PasswordPolicies","_auth0PasswordPolicies2","_data_utils","_index","_enterprise","obj","default","_dataFns","dataFns","initNS","get","DEFAULT_CONNECTION_VALIDATION","username","min","max","m","indexOf","strategyName","name","connections","strategy","List","find","withName","Map","getIn","x","strategyNameToConnectionType","str","STRATEGIES","formatConnectionValidation","connectionValidation","undefined","validation","defaultMin","defaultMax","parseInt","emptyConnections","fromJS","database","enterprise","passwordless","social","unknown","client","formatClient","o","id","tenant","subscription","formatClientConnections","result","toJS","_loop","_result$connectionTyp","strategies","connectionType","map","formatClientConnection","push","apply","type","displayName","display_name","passwordPolicy","password_complexity_options","min_length","minLength","allowSignup","showSignup","allowForgot","showForgot","requireUsername","requires_username","domains","domain_aliases","domain","unshift"],"sources":["C:/Users/diskk/OneDrive/Desktop/New folder/Transport_modal/node_modules/auth0-lock/lib/core/client/index.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n// TODO: this module should depend from social stuff\n\n\nexports.hasFreeSubscription = hasFreeSubscription;\nexports.connection = connection;\nexports.initClient = initClient;\nexports.clientConnections = clientConnections;\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _auth0PasswordPolicies = require('auth0-password-policies');\n\nvar _auth0PasswordPolicies2 = _interopRequireDefault(_auth0PasswordPolicies);\n\nvar _data_utils = require('../../utils/data_utils');\n\nvar _index = require('../../connection/social/index');\n\nvar _enterprise = require('../../connection/enterprise');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _dataFns = (0, _data_utils.dataFns)(['client']),\n    initNS = _dataFns.initNS,\n    get = _dataFns.get;\n\nvar DEFAULT_CONNECTION_VALIDATION = { username: { min: 1, max: 15 } };\n\nfunction hasFreeSubscription(m) {\n  return ['free', 'dev'].indexOf(get(m, ['tenant', 'subscription'])) > -1;\n}\n\nfunction connection(m, strategyName, name) {\n  // TODO: this function should take a client, not a map with a client\n  // key.\n  var connections = strategy(m, strategyName).get('connections', (0, _immutable.List)());\n  return connections.find(withName(name)) || (0, _immutable.Map)();\n}\n\nfunction strategy(m, name) {\n  // TODO: this function should take a client, not a map with a client\n  // key.\n  return m.getIn(['client', 'strategies'], (0, _immutable.List)()).find(withName(name)) || (0, _immutable.Map)();\n}\n\nfunction withName(name) {\n  return function (x) {\n    return x.get('name') === name;\n  };\n}\n\nfunction strategyNameToConnectionType(str) {\n  if (str === 'auth0') {\n    return 'database';\n  } else if (str === 'email' || str === 'sms') {\n    return 'passwordless';\n  } else if (_index.STRATEGIES[str]) {\n    return 'social';\n  } else if (_enterprise.STRATEGIES[str]) {\n    return 'enterprise';\n  } else if (['oauth1', 'oauth2'].indexOf(str) !== -1) {\n    return 'social';\n  } else {\n    return 'unknown';\n  }\n}\n\nfunction formatConnectionValidation() {\n  var connectionValidation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (connectionValidation.username == null) {\n    return null;\n  }\n\n  var validation = _extends({}, DEFAULT_CONNECTION_VALIDATION, connectionValidation);\n  var defaultMin = DEFAULT_CONNECTION_VALIDATION.username.min;\n  var defaultMax = DEFAULT_CONNECTION_VALIDATION.username.max;\n\n  validation.username.min = parseInt(validation.username.min, 10) || defaultMin;\n  validation.username.max = parseInt(validation.username.max, 10) || defaultMax;\n\n  if (validation.username.min > validation.username.max) {\n    validation.username.min = defaultMin;\n    validation.username.max = defaultMax;\n  }\n\n  return validation;\n}\n\nvar emptyConnections = _immutable2.default.fromJS({\n  database: [],\n  enterprise: [],\n  passwordless: [],\n  social: [],\n  unknown: [] // TODO: should be oauth2\n});\n\nfunction initClient(m, client) {\n  return initNS(m, formatClient(client));\n}\n\nfunction formatClient(o) {\n  return new _immutable2.default.fromJS({\n    id: o.id,\n    tenant: {\n      name: o.tenant,\n      subscription: o.subscription\n    },\n    connections: formatClientConnections(o)\n  });\n}\n\nfunction formatClientConnections(o) {\n  var result = emptyConnections.toJS();\n\n  var _loop = function _loop() {\n    var _result$connectionTyp;\n\n    var strategy = o.strategies[i];\n    var connectionType = strategyNameToConnectionType(strategy.name);\n\n    var connections = strategy.connections.map(function (connection) {\n      return formatClientConnection(connectionType, strategy.name, connection);\n    });\n    (_result$connectionTyp = result[connectionType]).push.apply(_result$connectionTyp, connections);\n  };\n\n  for (var i = 0; i < (o.strategies || []).length; i++) {\n    _loop();\n  }\n\n  return result;\n}\n\nfunction formatClientConnection(connectionType, strategyName, connection) {\n  var result = {\n    name: connection.name,\n    strategy: strategyName,\n    type: connectionType,\n    displayName: connection.display_name\n  };\n\n  if (connectionType === 'database') {\n    result.passwordPolicy = _auth0PasswordPolicies2.default[connection.passwordPolicy || 'none'];\n    if (connection.password_complexity_options && connection.password_complexity_options.min_length) {\n      result.passwordPolicy.length.minLength = connection.password_complexity_options.min_length;\n    }\n    result.allowSignup = typeof connection.showSignup === 'boolean' ? connection.showSignup : true;\n    result.allowForgot = typeof connection.showForgot === 'boolean' ? connection.showForgot : true;\n    result.requireUsername = typeof connection.requires_username === 'boolean' ? connection.requires_username : false;\n    result.validation = formatConnectionValidation(connection.validation);\n  }\n\n  if (connectionType === 'enterprise') {\n    var domains = connection.domain_aliases || [];\n    if (connection.domain) {\n      domains.unshift(connection.domain);\n    }\n    result.domains = domains;\n  }\n\n  return result;\n}\n\nfunction clientConnections(m) {\n  return get(m, 'connections', emptyConnections);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}