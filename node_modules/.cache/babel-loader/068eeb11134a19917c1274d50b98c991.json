{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _index = require('./index');\nvar l = _interopRequireWildcard(_index);\nvar _i18n = require('../i18n');\nvar i18n = _interopRequireWildcard(_i18n);\nvar _index2 = require('../connection/database/index');\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar Screen = function () {\n  function Screen(name) {\n    _classCallCheck(this, Screen);\n    this.name = name;\n  }\n  Screen.prototype.backHandler = function backHandler() {\n    return null;\n  };\n  Screen.prototype.escHandler = function escHandler() {\n    return null;\n  };\n  Screen.prototype.submitButtonLabel = function submitButtonLabel(m) {\n    return i18n.str(m, ['submitLabel']);\n  };\n  Screen.prototype.isFirstScreen = function isFirstScreen(m) {\n    var firstScreenName = (0, _index2.getInitialScreen)(m);\n    var currentScreenNameParts = this.name.split('.');\n    var currentScreenName = currentScreenNameParts[1] || currentScreenNameParts[0];\n\n    // if signup and login is enabled, both are the first screen in this scenario and\n    // neither of them should show the title\n    if (currentScreenName === 'signUp' && (0, _index2.hasScreen)(m, 'login')) {\n      return true;\n    }\n    var initialScreens = [firstScreenName, 'loading', 'lastLogin'];\n    return initialScreens.indexOf(currentScreenName) !== -1;\n  };\n  Screen.prototype.getTitle = function getTitle(m) {\n    //loading screen will never show a title\n    if (this.name === 'loading') {\n      return '';\n    }\n    return this.getScreenTitle(m) || i18n.str(m, 'title');\n  };\n  Screen.prototype.getScreenTitle = function getScreenTitle(m) {\n    return i18n.str(m, 'title');\n  };\n  Screen.prototype.submitHandler = function submitHandler() {\n    return null;\n  };\n  Screen.prototype.isSubmitDisabled = function isSubmitDisabled(m) {\n    return false;\n  };\n  Screen.prototype.renderAuxiliaryPane = function renderAuxiliaryPane() {\n    return null;\n  };\n  Screen.prototype.renderTabs = function renderTabs() {\n    return false;\n  };\n  Screen.prototype.renderTerms = function renderTerms() {\n    return null;\n  };\n  return Screen;\n}();\nexports.default = Screen;","map":null,"metadata":{},"sourceType":"script"}