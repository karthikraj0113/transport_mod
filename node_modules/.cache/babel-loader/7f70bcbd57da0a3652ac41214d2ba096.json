{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n}), exports.fixPath = fixPath, exports.getVal = getVal, exports.isEmpty = isEmpty, exports.isLoaded = isLoaded, exports.populate = populate;\nvar _some2 = _interopRequireDefault(require(\"lodash/some\")),\n  _defaultsDeep2 = _interopRequireDefault(require(\"lodash/defaultsDeep\")),\n  _reduce2 = _interopRequireDefault(require(\"lodash/reduce\")),\n  _mapValues2 = _interopRequireDefault(require(\"lodash/mapValues\")),\n  _map2 = _interopRequireDefault(require(\"lodash/map\")),\n  _has2 = _interopRequireDefault(require(\"lodash/has\")),\n  _get2 = _interopRequireDefault(require(\"lodash/get\")),\n  _set2 = _interopRequireDefault(require(\"lodash/set\")),\n  _size2 = _interopRequireDefault(require(\"lodash/size\")),\n  _constants = require(\"./constants\"),\n  _populate = require(\"./utils/populate\"),\n  _reducers = require(\"./utils/reducers\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (o) {\n    if (\"string\" == typeof o) return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    return \"Object\" === n && o.constructor && (n = o.constructor.name), \"Map\" === n || \"Set\" === n ? Array.from(o) : \"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(o, minLen) : void 0;\n  }\n}\nfunction _iterableToArray(iter) {\n  if (\"undefined\" != typeof Symbol && null != iter[Symbol.iterator] || null != iter[\"@@iterator\"]) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  (null == len || len > arr.length) && (len = arr.length);\n  for (var i = 0, arr2 = Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var source, i = 1; i < arguments.length; i++) source = null == arguments[i] ? {} : arguments[i], i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n    _defineProperty(target, key, source[key]);\n  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n  });\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  return key in obj ? Object.defineProperty(obj, key, {\n    value: value,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : obj[key] = value, obj;\n}\nfunction getVal(firebase, path, notSetValue) {\n  if (!firebase) return notSetValue;\n  var dotPath = (0, _reducers.getDotStrPath)(path),\n    valueAtPath = (0, _get2.default)(firebase, dotPath, notSetValue);\n  return valueAtPath;\n}\nfunction isLoaded() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];\n  return !(args && args.length) || args.every(function (arg) {\n    return arg !== void 0 && !1 !== (0, _get2.default)(arg, \"isLoaded\");\n  });\n}\nfunction isEmpty() {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) args[_key2] = arguments[_key2];\n  return !(args && args.length) || args.some(function (arg) {\n    return !(arg && (0, _size2.default)(arg)) || !0 === arg.isEmpty;\n  });\n}\nfunction fixPath(path) {\n  return (\"/\" === path.substring(0, 1) ? \"\" : \"/\") + path;\n}\nfunction buildChildList(state, list, p) {\n  var mapFn = Array.isArray(list) ? _map2.default : _mapValues2.default;\n  return mapFn(list, function (val, key) {\n    var getKey = val;\n    (!0 === val || p.populateByKey) && (getKey = key);\n    var dotRoot = (0, _reducers.getDotStrPath)(p.root),\n      pathArr = [dotRoot, getKey];\n    p.childParam && pathArr.push(p.childParam);\n    var pathString = pathArr.join(\".\");\n    return (0, _get2.default)(state.data, pathString) ? p.keyProp ? _objectSpread(_defineProperty({}, p.keyProp, getKey), (0, _get2.default)(state.data, pathString)) : (0, _get2.default)(state.data, pathString) : !0 === val || p.populateByKey ? val : getKey;\n  });\n}\nfunction populateChild(state, child, p) {\n  var childVal = (0, _get2.default)(child, p.child);\n  if (!child || !childVal) return null;\n  if (\"string\" == typeof childVal || childVal instanceof String) {\n    var dotRoot = (p.storeAs ? p.storeAs : p.root).split(\"/\").filter(Boolean).join(\".\"),\n      pathArr = [dotRoot, childVal];\n    p.childParam && pathArr.push(p.childParam);\n    var pathString = pathArr.join(\".\"),\n      populateVal = (0, _get2.default)(state.data, pathString);\n    return populateVal ? (0, _set2.default)({}, p.childAlias || p.child, p.keyProp ? _objectSpread(_defineProperty({}, p.keyProp, childVal), populateVal) : populateVal) : child;\n  }\n  return (0, _set2.default)({}, p.childAlias || p.child, buildChildList(state, childVal, p));\n}\nfunction populate(state, path, populates, notSetValue) {\n  var splitPath = path.split(\"/\").filter(Boolean),\n    pathArr = -1 === _constants.topLevelPaths.indexOf(splitPath[0]) ? [\"data\"].concat(_toConsumableArray(splitPath)) : splitPath,\n    dotPath = pathArr.join(\".\"),\n    data = (0, _get2.default)(state, dotPath, notSetValue);\n  if (!state || data === notSetValue) return notSetValue;\n  if (null === data) return null;\n  var populatesForData = (0, _populate.getPopulateObjs)(\"function\" == typeof populates ? populates(pathArr.slice(-1)[0], data) : populates);\n  if (Array.isArray(data)) {\n    var someArrayItemHasKey = function (array) {\n        return function (key) {\n          return (0, _some2.default)(array, function (item) {\n            return (0, _has2.default)(item, key);\n          });\n        };\n      },\n      _dataHasPopulateChilds = (0, _some2.default)(populatesForData, function (populate) {\n        return someArrayItemHasKey(data)([\"value\", populate.child]);\n      });\n    return _dataHasPopulateChilds ? data.map(function (_ref) {\n      var key = _ref.key,\n        dataValue = _ref.value,\n        populatedValue = populatesForData.map(function (p) {\n          return populateChild(state, dataValue, p);\n        }).reduce(function (acc, v) {\n          return (0, _defaultsDeep2.default)(v, acc);\n        }, dataValue);\n      return {\n        key: key,\n        value: populatedValue\n      };\n    }) : data;\n  }\n  var dataHasPopulateChilds = (0, _some2.default)(populatesForData, function (p) {\n    return (0, _has2.default)(data, p.child);\n  });\n  return dataHasPopulateChilds ? populatesForData.map(function (p) {\n    return populateChild(state, data, p);\n  }).reduce(function (acc, v) {\n    return (0, _defaultsDeep2.default)(v, acc);\n  }, data) : -1 === pathArr.indexOf(\"profile\") ? (0, _mapValues2.default)(data, function (child, childKey) {\n    var key = \"ordered\" === pathArr[0] ? child.key : childKey,\n      populatesForDataItem = (0, _populate.getPopulateObjs)(\"function\" == typeof populates ? populates(key, child) : populates),\n      dataHasPopulateChilds = (0, _some2.default)(populatesForDataItem, function (p) {\n        return (0, _has2.default)(child, p.child);\n      });\n    return dataHasPopulateChilds ? (0, _reduce2.default)((0, _map2.default)(populatesForDataItem, function (p) {\n      return populateChild(state, child, p);\n    }), function (obj, v) {\n      return (0, _defaultsDeep2.default)(v, obj);\n    }, child) : child;\n  }) : data;\n}","map":{"version":3,"sources":["../src/helpers.js"],"names":["getVal","firebase","path","notSetValue","dotPath","valueAtPath","isLoaded","args","length","every","arg","isEmpty","some","fixPath","substring","buildChildList","state","list","p","mapFn","Array","isArray","val","key","getKey","populateByKey","dotRoot","root","pathArr","childParam","push","pathString","join","data","keyProp","populateChild","child","childVal","String","storeAs","split","filter","Boolean","populateVal","childAlias","populate","populates","splitPath","indexOf","populatesForData","slice","someArrayItemHasKey","array","item","dataHasPopulateChilds","map","value","dataValue","populatedValue","reduce","acc","v","childKey","populatesForDataItem","obj"],"mappings":"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","sourcesContent":["import {\n  size,\n  set,\n  get,\n  has,\n  map,\n  mapValues,\n  reduce,\n  defaultsDeep,\n  some\n} from 'lodash'\nimport { topLevelPaths } from './constants'\nimport { getPopulateObjs } from './utils/populate'\nimport { getDotStrPath } from './utils/reducers'\n\n/**\n * **Deprecated** - This helper will be removed in future versions. Please\n * use object destructuring or utilities from other libraries such as\n * [lodash's get](https://lodash.com/docs/4.17.15#get).\n * Get a value from firebase using slash notation. This enables an easy\n * migration from v1's dataToJS/pathToJS/populatedDataToJS functions to v2 syntax\n * **NOTE:** Setting a default value will cause `isLoaded` to always return true\n * @param {object} firebase - Firebase instance (state.firebase)\n * @param {string} path - Path of parameter to load\n * @param {any} notSetValue - Value to return if value is not\n * found in redux. This will cause `isLoaded` to always return true (since\n * value is set from the start).\n * @returns {any} Data located at path within firebase.\n * @example <caption>Basic</caption>\n * import { compose } from 'redux'\n * import { connect } from 'react-redux'\n * import { firebaseConnect, getVal } from 'react-redux-firebase'\n *\n * const enhance = compose(\n *   firebaseConnect(['todos/user1']),\n *   connect(({ firebase }) => ({\n *     // this.props.todos loaded from state.firebase.data.todos\n *     todos: getVal(firebase, 'data/todos/user1')\n *   }))\n * )\n * export default enhance(SomeComponent)\n * @example <caption>Base Paths</caption>\n * import { connect } from 'react-redux'\n * import { firebaseConnect, getVal } from 'react-redux-firebase'\n *\n * export default connect(({ firebase }) => ({\n *   // this.props.auth loaded from state.firebase.auth\n *   auth: getVal(firebase, 'auth'),\n *   profile: getVal(firebase, 'profile')\n * })(SomeComponent)\n * @example <caption>Default Value</caption>\n * import { compose } from 'redux'\n * import { connect } from 'react-redux'\n * import { firebaseConnect, getVal } from 'react-redux-firebase'\n *\n * const defaultValue = {\n *  1: {\n *    text: 'Example Todo'\n *  }\n * }\n *\n * const enhance = compose(\n *   firebaseConnect(['todos/user1']),\n *   connect(({ firebase }) => ({\n *     // this.props.todos loaded from state.firebase.data.todos\n *     todos: getVal(firebase, 'data/todos/user1', defaultValue)\n *   }))\n * )\n *\n * export default enhance(SomeComponent)\n */\nexport function getVal(firebase, path, notSetValue) {\n  if (!firebase) {\n    return notSetValue\n  }\n\n  const dotPath = getDotStrPath(path)\n  const valueAtPath = get(firebase, dotPath, notSetValue)\n\n  return valueAtPath\n}\n\n/**\n * Detect whether data from redux state is loaded yet or not\n * @param {...object} args - Items to check loaded status of. A comma separated\n * list is also acceptable.\n * @returns {boolean} Whether or not item is loaded\n * @example\n * import React from 'react'\n * import PropTypes from 'prop-types'\n * import { compose } from 'redux'\n * import { connect } from 'react-redux'\n * import firebaseConnect from 'react-redux-firebase/lib/firebaseConnect'\n * import { isLoaded, isEmpty } from 'react-redux-firebase/lib/utils'\n *\n * const enhance = compose(\n *   firebaseConnect(['todos']),\n *   connect(({ firebase: { data: { todos } } }) => ({\n *     todos // state.firebase.data.todos from redux passed as todos prop\n *   }))\n * )\n *\n * function Todos({ todos }) {\n *   // Message for if todos are loading\n *   if (!isLoaded(todos)) {\n *     return <span>Loading...</span>\n *   }\n *\n *   // Message if todos are empty\n *   if (isEmpty(todos)) {\n *     return <span>No Todos Found</span>\n *   }\n *\n *   return <div><pre>{JSON.stringify(todos, null, 2)}</pre></div>\n * }\n *\n * Todos.propTypes = {\n *   todos: PropTypes.object\n * }\n *\n * export default enhance(Todos)\n */\nexport function isLoaded(...args) {\n  return !args || !args.length\n    ? true\n    : args.every((arg) => arg !== undefined && get(arg, 'isLoaded') !== false)\n}\n\n/**\n * Detect whether items are empty or not\n * @param {object} args - Item to check loaded status of. A comma seperated list\n * is also acceptable.\n * @returns {boolean} Whether or not item is empty\n * @example\n * import React from 'react'\n * import PropTypes from 'prop-types'\n * import { compose } from 'redux'\n * import { connect } from 'react-redux'\n * import { firebaseConnect, isEmpty, isLoaded } from 'react-redux-firebase'\n *\n * const enhance = compose(\n *   firebaseConnect(['todos']),\n *   connect(({ firebase: { data: { todos } } }) => ({\n *     todos // state.firebase.data.todos from redux passed as todos prop\n *   }))\n * )\n *\n * function Todos({ todos }) {\n *   // Message for if todos are loading\n *   if (!isLoaded(todos)) {\n *     return <span>Loading...</span>\n *   }\n *\n *   // Message if todos are empty\n *   if (isEmpty(todos)) {\n *     return <span>No Todos Found</span>\n *   }\n *\n *   return <todos>{JSON.stringify(todos)}</todos>\n * }\n *\n * Todos.propTypes = {\n *   todos: PropTypes.object\n * }\n *\n * export default enhance(Todos)\n */\nexport function isEmpty(...args) {\n  return !args || !args.length\n    ? true\n    : args.some((arg) => !(arg && size(arg)) || arg.isEmpty === true)\n}\n\n/**\n * @description Fix path by adding \"/\" to path if needed\n * @param {string} path - Path string to fix\n * @returns {string} - Fixed path\n * @private\n */\nexport function fixPath(path) {\n  return (path.substring(0, 1) === '/' ? '' : '/') + path\n}\n\n/**\n * @private\n * @param {object} state - Firebase state object\n * @param {object} list - Path of parameter to load\n * @param {object} p - Object with population settings\n * @returns {object} List of child objects\n */\nfunction buildChildList(state, list, p) {\n  const mapFn = Array.isArray(list) ? map : mapValues\n  return mapFn(list, (val, key) => {\n    let getKey = val\n    // Handle key: true lists\n    if (val === true || p.populateByKey) {\n      getKey = key\n    }\n    // Allow for aliasing populated data see #126 for more details\n    const dotRoot = getDotStrPath(p.root)\n    const pathArr = [dotRoot, getKey]\n\n    // Handle child param\n    if (p.childParam) {\n      pathArr.push(p.childParam)\n    }\n\n    const pathString = pathArr.join('.')\n\n    // Set to child under key if populate child exists\n    if (get(state.data, pathString)) {\n      return p.keyProp\n        ? { [p.keyProp]: getKey, ...get(state.data, pathString) }\n        : get(state.data, pathString)\n    }\n    // Populate child does not exist\n    return val === true || p.populateByKey ? val : getKey\n  })\n}\n\n/**\n * @private\n * @param {object} state - Firebase state object\n * @param {object} child - Path of parameter to load\n * @param {object} p - Object with population settings\n * @returns {object} Populated child object\n */\nfunction populateChild(state, child, p) {\n  // no matching child parameter\n  const childVal = get(child, p.child)\n  if (!child || !childVal) {\n    return null\n  }\n  // populate child is key\n  if (typeof childVal === 'string' || childVal instanceof String) {\n    // attach child paramter if it exists\n    const dotRoot = (p.storeAs ? p.storeAs : p.root)\n      .split('/')\n      .filter(Boolean) // Drop falsey values (compact)\n      .join('.')\n    const pathArr = [dotRoot, childVal]\n\n    // Handle child param\n    if (p.childParam) {\n      pathArr.push(p.childParam)\n    }\n\n    const pathString = pathArr.join('.')\n\n    const populateVal = get(state.data, pathString)\n    if (populateVal) {\n      return set(\n        {},\n        p.childAlias || p.child,\n        p.keyProp ? { [p.keyProp]: childVal, ...populateVal } : populateVal\n      )\n    }\n    // matching child does not exist\n    return child\n  }\n  // populate child list\n  return set({}, p.childAlias || p.child, buildChildList(state, childVal, p))\n}\n\n/**\n * Populate with data from multiple locations of redux state.\n * @param {object} state - Firebase state object (state.firebase in redux store)\n * @param {string} path - Path of parameter to load\n * @param {Array} populates - Array of populate config objects\n * @param {object|string|boolean} notSetValue - Value to return if value is not found\n * @returns {object} Data located at path within Immutable Object\n * @example <caption>Basic</caption>\n * import { compose } from 'redux'\n * import { connect } from 'react-redux'\n * import { firebaseConnect } from 'react-redux-firebase'\n * const populates = [{ child: 'owner', root: 'users' }]\n *\n * const enhance = compose(\n *   firebaseConnect([\n *     { path: 'todos', populates } // load \"todos\" and matching \"users\" to redux\n *   ]),\n *   connect((state) => ({\n *     // this.props.todos loaded from state.firebase.data.todos\n *     // each todo has child 'owner' populated from matching uid in 'users' root\n *     // for loading un-populated todos use state.firebase.data.todos\n *     todos: populate(state.firebase, 'todos', populates),\n *   }))\n * )\n *\n * export default enhance(SomeComponent)\n */\nexport function populate(state, path, populates, notSetValue) {\n  const splitPath = path.split('/').filter(Boolean) // Drop falsey values (compact)\n  // append 'data' prefix to path if it is not a top level path\n  const pathArr =\n    topLevelPaths.indexOf(splitPath[0]) === -1\n      ? ['data', ...splitPath]\n      : splitPath\n  const dotPath = pathArr.join('.')\n  // Gather data from top level if path is profile (handles populating profile)\n  const data = get(state, dotPath, notSetValue)\n\n  // Return notSetValue for undefined child\n  if (!state || data === notSetValue) {\n    return notSetValue\n  }\n  // Return null for null child\n  if (data === null) {\n    return null\n  }\n\n  // check for if data is single object or a list of objects\n  const populatesForData = getPopulateObjs(\n    typeof populates === 'function'\n      ? populates(pathArr.slice(-1)[0], data) // pass last slice in path\n      : populates\n  )\n\n  if (Array.isArray(data)) {\n    // When using a path in ordered, data will be an array instead of an object\n    // and data is located at the `value` prop\n    const someArrayItemHasKey = (array) => (key) =>\n      some(array, (item) => has(item, key))\n\n    // Check items within the list to see if value exists for some populate parameters\n    const dataHasPopulateChilds = some(populatesForData, (populate) =>\n      someArrayItemHasKey(data)(['value', populate.child])\n    )\n\n    // Populate if populate children exist\n    if (dataHasPopulateChilds) {\n      return data.map(({ key, value: dataValue }) => {\n        const populatedValue = populatesForData\n          .map((p) => populateChild(state, dataValue, p))\n          .reduce((acc, v) => defaultsDeep(v, acc), dataValue)\n\n        return {\n          key,\n          value: populatedValue\n        }\n      })\n    }\n\n    // return unpopulated data if no populates have values\n    return data\n  }\n\n  // check each populate child parameter for existence\n  const dataHasPopulateChilds = some(populatesForData, (p) =>\n    has(data, p.child)\n  )\n\n  // Single object that contains at least one child parameter\n  if (dataHasPopulateChilds) {\n    return populatesForData\n      .map((p) => populateChild(state, data, p))\n      .reduce((acc, v) => defaultsDeep(v, acc), data)\n  }\n\n  // Return for profile since it is a single object (following is for a list of objects)\n  // TODO: Improve this logic to allow for other paths containing profile\n  if (pathArr.indexOf('profile') !== -1) {\n    return data\n  }\n\n  // Data is a map of objects, each value has parameters to be populated\n  return mapValues(data, (child, childKey) => {\n    // use child's key if doing ordered populate\n    const key = pathArr[0] === 'ordered' ? child.key : childKey\n    // get populate settings on item level (passes child if populates is a function)\n    const populatesForDataItem = getPopulateObjs(\n      typeof populates === 'function' ? populates(key, child) : populates\n    )\n    // confirm at least one populate value exists on child\n    const dataHasPopulateChilds = some(populatesForDataItem, (p) =>\n      has(child, p.child)\n    )\n    // return unmodified child if no populate params exist on child\n    if (!dataHasPopulateChilds) {\n      return child\n    }\n    // combine data from all populates to one object starting with original data\n    return reduce(\n      map(populatesForDataItem, (p) => populateChild(state, child, p)),\n      (obj, v) => defaultsDeep(v, obj),\n      child\n    )\n  })\n}\n"]},"metadata":{},"sourceType":"script"}