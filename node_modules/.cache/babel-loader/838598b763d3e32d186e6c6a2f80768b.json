{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _omit2 = _interopRequireDefault(require(\"lodash/omit\"));\nvar _constants = require(\"../constants\");\nvar _reducers = require(\"../utils/reducers\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction listenersById() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n    type = _ref.type,\n    path = _ref.path,\n    payload = _ref.payload;\n  switch (type) {\n    case _constants.actionTypes.SET_LISTENER:\n      return _objectSpread({}, state, _defineProperty({}, payload.name, {\n        name: payload.name,\n        path: path\n      }));\n    case _constants.actionTypes.UNSET_LISTENER:\n      return (0, _omit2.default)(state, [payload.name]);\n    default:\n      return state;\n  }\n}\nfunction allListeners() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var _ref2 = arguments.length > 1 ? arguments[1] : undefined,\n    type = _ref2.type,\n    payload = _ref2.payload;\n  switch (type) {\n    case _constants.actionTypes.SET_LISTENER:\n      return [].concat(_toConsumableArray(state), [payload.name]);\n    case _constants.actionTypes.UNSET_LISTENER:\n      return state.filter(function (name) {\n        return name !== payload.name;\n      });\n    default:\n      return state;\n  }\n}\nvar listenersReducer = (0, _reducers.combineReducers)({\n  byId: listenersById,\n  allIds: allListeners\n});\nvar _default = listenersReducer;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}