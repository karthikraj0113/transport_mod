{"ast":null,"code":"\"use strict\";\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { CircleMarker as LeafletCircleMarker } from 'leaflet';\nimport { withLeaflet } from './context';\nimport Path from './Path';\nvar CircleMarker = /*#__PURE__*/function (_Path) {\n  _inheritsLoose(CircleMarker, _Path);\n  function CircleMarker() {\n    return _Path.apply(this, arguments) || this;\n  }\n  var _proto = CircleMarker.prototype;\n  _proto.createLeafletElement = function createLeafletElement(props) {\n    var el = new LeafletCircleMarker(props.center, this.getOptions(props));\n    this.contextValue = _extends({}, props.leaflet, {\n      popupContainer: el\n    });\n    return el;\n  };\n  _proto.updateLeafletElement = function updateLeafletElement(fromProps, toProps) {\n    if (toProps.center !== fromProps.center) {\n      this.leafletElement.setLatLng(toProps.center);\n    }\n    if (toProps.radius !== fromProps.radius) {\n      this.leafletElement.setRadius(toProps.radius);\n    }\n  };\n  return CircleMarker;\n}(Path);\nexport default withLeaflet(CircleMarker);","map":null,"metadata":{},"sourceType":"module"}