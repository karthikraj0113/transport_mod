{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n}), exports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\")),\n  _propTypes = _interopRequireDefault(require(\"prop-types\")),\n  _ReduxFirestoreContext = _interopRequireDefault(require(\"./ReduxFirestoreContext\")),\n  _createFirebaseInstance = _interopRequireDefault(require(\"./createFirebaseInstance\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction ReduxFirestoreProvider() {\n  var props = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {},\n    children = props.children,\n    config = props.config,\n    dispatch = props.dispatch,\n    firebase = props.firebase,\n    createFirestoreInstance = props.createFirestoreInstance,\n    initializeAuth = props.initializeAuth,\n    extendedFirestoreInstance = _react.default.useMemo(function () {\n      var extendedFirebaseInstance = firebase._reactReduxFirebaseExtended ? firebase : (0, _createFirebaseInstance.default)(firebase, config, dispatch),\n        extendedFirestoreInstance = createFirestoreInstance(firebase, config, dispatch);\n      return initializeAuth && extendedFirebaseInstance.initializeAuth(), extendedFirestoreInstance;\n    }, [firebase, config, dispatch, createFirestoreInstance, initializeAuth]);\n  return _react.default.createElement(_ReduxFirestoreContext.default.Provider, {\n    value: extendedFirestoreInstance\n  }, children);\n}\nReduxFirestoreProvider.defaultProps = {\n  initializeAuth: !0\n}, ReduxFirestoreProvider.propTypes = {\n  children: _propTypes.default.node,\n  config: _propTypes.default.object.isRequired,\n  dispatch: _propTypes.default.func.isRequired,\n  createFirestoreInstance: _propTypes.default.func.isRequired,\n  initializeAuth: _propTypes.default.bool,\n  firebase: _propTypes.default.object.isRequired\n};\nvar _default = ReduxFirestoreProvider;\nexports.default = _default, module.exports = exports.default;","map":{"version":3,"sources":["../src/ReduxFirestoreProvider.js"],"names":["ReduxFirestoreProvider","props","children","config","dispatch","firebase","createFirestoreInstance","initializeAuth","extendedFirestoreInstance","React","useMemo","extendedFirebaseInstance","_reactReduxFirebaseExtended","defaultProps","propTypes","PropTypes","node","object","isRequired","func","bool"],"mappings":";;;;;;;;;;;;;;AAkBA,SAASA,sBAAT,CAAA,EAA4C;EAAZC,IAAAA,KAAY,GAAA,CAAA,GAAA,SAAA,CAAA,MAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,CAAA,CAAI;IAExCC,QAFwC,GAQtCD,KARsC,CAExCC,QAFwC;IAGxCC,MAHwC,GAQtCF,KARsC,CAGxCE,MAHwC;IAIxCC,QAJwC,GAQtCH,KARsC,CAIxCG,QAJwC;IAKxCC,QALwC,GAQtCJ,KARsC,CAKxCI,QALwC;IAMxCC,uBANwC,GAQtCL,KARsC,CAMxCK,uBANwC;IAOxCC,cAPwC,GAQtCN,KARsC,CAOxCM,cAPwC;IASpCC,yBAAyB,GAAGC,MAAAA,CAAAA,OAAAA,CAAMC,OAAND,CAAc,YAAM;MAAA,IAC9CE,wBAAwB,GAAGN,QAAQ,CAACO,2BAATP,GAC7BA,QAD6BA,GAE7B,CAAA,CAAA,EAAA,uBAAA,CAAA,OAAA,EAAuBA,QAAvB,EAAiCF,MAAjC,EAAyCC,QAAzC,CAHgD;QAI9CI,yBAAyB,GAAGF,uBAAuB,CACvDD,QADuD,EAEvDF,MAFuD,EAGvDC,QAHuD,CAJL;MAUhDG,OAAAA,cAIJ,IAHEI,wBAAwB,CAACJ,cAAzBI,CAAAA,CAGF,EAAOH,yBACR;IAAA,CAfiCC,EAe/B,CAACJ,QAAD,EAAWF,MAAX,EAAmBC,QAAnB,EAA6BE,uBAA7B,EAAsDC,cAAtD,CAf+BE,CATQ;EAyB1C,OACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,sBAAA,CAAA,OAAD,CAAuB,QAAvB,EAAA;IAAgC,KAAK,EAAED;EAAvC,CAAA,EACGN,QADH,CAIH;AAAA;AAEDF,sBAAsB,CAACa,YAAvBb,GAAsC;EACpCO,cAAc,EAAA,CAAA;AADsB,C,EAItCP,sBAAsB,CAACc,SAAvBd,GAAmC;EACjCE,QAAQ,EAAEa,UAAAA,CAAAA,OAAAA,CAAUC,IADa;EAEjCb,MAAM,EAAEY,UAAAA,CAAAA,OAAAA,CAAUE,MAAVF,CAAiBG,UAFQ;EAGjCd,QAAQ,EAAEW,UAAAA,CAAAA,OAAAA,CAAUI,IAAVJ,CAAeG,UAHQ;EAIjCZ,uBAAuB,EAAES,UAAAA,CAAAA,OAAAA,CAAUI,IAAVJ,CAAeG,UAJP;EAKjCX,cAAc,EAAEQ,UAAAA,CAAAA,OAAAA,CAAUK,IALO;EAMjCf,QAAQ,EAAEU,UAAAA,CAAAA,OAAAA,CAAUE,MAAVF,CAAiBG;AANM,C;eASpBlB,sB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport ReduxFirestoreContext from './ReduxFirestoreContext'\nimport createFirebaseInstance from './createFirebaseInstance'\n\n/**\n * @description Provider for context containing extended firestore instance created\n * by react-redux-firebase\n * @param {object} props - Component props\n * @param {object} props.config - react-redux-firebase config\n * @param {Function} props.dispatch - Redux's dispatch function\n * @param {object} props.firebase - Firebase library\n * @param {boolean} props.initializeAuth - Whether or not to initialize auth\n * @param {Function} props.createFirestoreInstance - Function for creating\n * extended firestore instance\n * @returns {React.Context.Provider} Provider for redux-firestore context\n * @see https://react-redux-firebase.com/docs/api/ReduxFirestoreProvider.html\n */\nfunction ReduxFirestoreProvider(props = {}) {\n  const {\n    children,\n    config,\n    dispatch,\n    firebase,\n    createFirestoreInstance,\n    initializeAuth\n  } = props\n  const extendedFirestoreInstance = React.useMemo(() => {\n    const extendedFirebaseInstance = firebase._reactReduxFirebaseExtended\n      ? firebase\n      : createFirebaseInstance(firebase, config, dispatch)\n    const extendedFirestoreInstance = createFirestoreInstance(\n      firebase,\n      config,\n      dispatch\n    )\n    // Initialize auth if not disabled\n    if (initializeAuth) {\n      extendedFirebaseInstance.initializeAuth()\n    }\n\n    return extendedFirestoreInstance\n  }, [firebase, config, dispatch, createFirestoreInstance, initializeAuth])\n  return (\n    <ReduxFirestoreContext.Provider value={extendedFirestoreInstance}>\n      {children}\n    </ReduxFirestoreContext.Provider>\n  )\n}\n\nReduxFirestoreProvider.defaultProps = {\n  initializeAuth: true\n}\n\nReduxFirestoreProvider.propTypes = {\n  children: PropTypes.node,\n  config: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  createFirestoreInstance: PropTypes.func.isRequired,\n  initializeAuth: PropTypes.bool,\n  firebase: PropTypes.object.isRequired\n}\n\nexport default ReduxFirestoreProvider\n"]},"metadata":{},"sourceType":"script"}