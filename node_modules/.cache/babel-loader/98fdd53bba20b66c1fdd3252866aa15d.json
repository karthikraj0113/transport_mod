{"ast":null,"code":"import \"antd/es/badge/style\";\nimport _Badge from \"antd/es/badge\";\nvar _jsxFileName = \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\container\\\\chat\\\\overview\\\\PrivetChat.js\";\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { BlockSpan } from '../style';\nimport { textRefactor } from '../../../components/utilities/utilities';\nimport { filterSinglePage } from '../../../redux/chat/actionCreator';\nconst PrivateChat = ({\n  match\n}) => {\n  const dispatch = useDispatch();\n  const chatData = useSelector(state => state.chat.data);\n  const dataFiltering = email => {\n    dispatch(filterSinglePage(email));\n  };\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, chatData && chatData.sort((a, b) => {\n    return b.time - a.time;\n  }).map((user, key) => {\n    const {\n      userName,\n      content,\n      email,\n      img,\n      active\n    } = user;\n    const id = content[content.length - 1].time;\n    const same = moment(id).format('MM-DD-YYYY') === moment().format('MM-DD-YYYY');\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: id,\n      className: \"chat-link-signle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      onClick: () => dataFiltering(email),\n      to: `${match.path}/${email}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author-figure\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(`../../../static/img/chat-author/${img}`),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: active ? 'active' : 'inactive',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(BlockSpan, {\n      className: \"author-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, userName), /*#__PURE__*/React.createElement(BlockSpan, {\n      className: \"author-chatText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, textRefactor(content[content.length - 1].content, 5))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author-chatMeta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(BlockSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, same ? moment(id).format('hh:mm A') : moment(id).format('dddd')), key <= 1 && /*#__PURE__*/React.createElement(_Badge, {\n      className: \"badge-success\",\n      count: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 34\n      }\n    }))));\n  }));\n};\n__signature__(PrivateChat, \"useDispatch{dispatch}\\nuseSelector{chatData}\", () => [useDispatch, useSelector]);\nPrivateChat.propTypes = {\n  match: PropTypes.object\n};\nconst _default = PrivateChat;\nexport default _default;\n;\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n  if (!reactHotLoader) {\n    return;\n  }\n  reactHotLoader.register(PrivateChat, \"PrivateChat\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\container\\\\chat\\\\overview\\\\PrivetChat.js\");\n  reactHotLoader.register(_default, \"default\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\container\\\\chat\\\\overview\\\\PrivetChat.js\");\n})();\n;\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["React","NavLink","moment","useDispatch","useSelector","PropTypes","BlockSpan","textRefactor","filterSinglePage","PrivateChat","match","dispatch","chatData","state","chat","data","dataFiltering","email","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","sort","a","b","time","map","user","key","userName","content","img","active","id","length","same","format","className","onClick","to","path","src","require","alt","_Badge","count","__signature__","propTypes","object","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["C:/Users/diskk/OneDrive/Desktop/New folder/Transport_modal/src/container/chat/overview/PrivetChat.js"],"sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Badge } from 'antd';\r\nimport { BlockSpan } from '../style';\r\nimport { textRefactor } from '../../../components/utilities/utilities';\r\nimport { filterSinglePage } from '../../../redux/chat/actionCreator';\r\n\r\nconst PrivateChat = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const chatData = useSelector(state => state.chat.data);\r\n\r\n  const dataFiltering = email => {\r\n    dispatch(filterSinglePage(email));\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {chatData &&\r\n        chatData\r\n          .sort((a, b) => {\r\n            return b.time - a.time;\r\n          })\r\n          .map((user, key) => {\r\n            const { userName, content, email, img, active } = user;\r\n            const id = content[content.length - 1].time;\r\n            const same = moment(id).format('MM-DD-YYYY') === moment().format('MM-DD-YYYY');\r\n            return (\r\n              <li key={id} className=\"chat-link-signle\">\r\n                <NavLink onClick={() => dataFiltering(email)} to={`${match.path}/${email}`}>\r\n                  <div className=\"author-figure\">\r\n                    <img src={require(`../../../static/img/chat-author/${img}`)} alt=\"\" />\r\n                    <span className={active ? 'active' : 'inactive'} />\r\n                  </div>\r\n                  <div className=\"author-info\">\r\n                    <BlockSpan className=\"author-name\">{userName}</BlockSpan>\r\n\r\n                    <BlockSpan className=\"author-chatText\">\r\n                      {textRefactor(content[content.length - 1].content, 5)}\r\n                    </BlockSpan>\r\n                  </div>\r\n                  <div className=\"author-chatMeta\">\r\n                    <BlockSpan>{same ? moment(id).format('hh:mm A') : moment(id).format('dddd')}</BlockSpan>\r\n                    {key <= 1 && <Badge className=\"badge-success\" count={3} />}\r\n                  </div>\r\n                </NavLink>\r\n              </li>\r\n            );\r\n          })}\r\n    </ul>\r\n  );\r\n};\r\nPrivateChat.propTypes = {\r\n  match: PropTypes.object,\r\n};\r\nexport default PrivateChat;\r\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,YAAY,QAAQ,yCAAyC;AACtE,SAASC,gBAAgB,QAAQ,mCAAmC;AAEpE,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EACjC,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACC,IAAI,CAAC;EAEtD,MAAMC,aAAa,GAAGC,KAAK,IAAI;IAC7BN,QAAQ,CAACH,gBAAgB,CAACS,KAAK,CAAC,CAAC;EACnC,CAAC;EAED,oBACEjB,KAAA,CAAAkB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGZ,QAAQ,IACPA,QAAQ,CACLa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACd,OAAOA,CAAC,CAACC,IAAI,GAAGF,CAAC,CAACE,IAAI;EACxB,CAAC,CAAC,CACDC,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAK;IAClB,MAAM;MAAEC,QAAQ;MAAEC,OAAO;MAAEhB,KAAK;MAAEiB,GAAG;MAAEC;IAAO,CAAC,GAAGL,IAAI;IACtD,MAAMM,EAAE,GAAGH,OAAO,CAACA,OAAO,CAACI,MAAM,GAAG,CAAC,CAAC,CAACT,IAAI;IAC3C,MAAMU,IAAI,GAAGpC,MAAM,CAACkC,EAAE,CAAC,CAACG,MAAM,CAAC,YAAY,CAAC,KAAKrC,MAAM,CAAC,CAAC,CAACqC,MAAM,CAAC,YAAY,CAAC;IAC9E,oBACEvC,KAAA,CAAAkB,aAAA;MAAIa,GAAG,EAAEK,EAAG;MAACI,SAAS,EAAC,kBAAkB;MAAArB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACvCxB,KAAA,CAAAkB,aAAA,CAACjB,OAAO;MAACwC,OAAO,EAAEA,CAAA,KAAMzB,aAAa,CAACC,KAAK,CAAE;MAACyB,EAAE,EAAG,GAAEhC,KAAK,CAACiC,IAAK,IAAG1B,KAAM,EAAE;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACzExB,KAAA,CAAAkB,aAAA;MAAKsB,SAAS,EAAC,eAAe;MAAArB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC5BxB,KAAA,CAAAkB,aAAA;MAAK0B,GAAG,EAAEC,OAAO,CAAE,mCAAkCX,GAAI,EAAC,CAAE;MAACY,GAAG,EAAC,EAAE;MAAA3B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,eACtExB,KAAA,CAAAkB,aAAA;MAAMsB,SAAS,EAAEL,MAAM,GAAG,QAAQ,GAAG,UAAW;MAAAhB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAC/C,CAAC,eACNxB,KAAA,CAAAkB,aAAA;MAAKsB,SAAS,EAAC,aAAa;MAAArB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC1BxB,KAAA,CAAAkB,aAAA,CAACZ,SAAS;MAACkC,SAAS,EAAC,aAAa;MAAArB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEQ,QAAoB,CAAC,eAEzDhC,KAAA,CAAAkB,aAAA,CAACZ,SAAS;MAACkC,SAAS,EAAC,iBAAiB;MAAArB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACnCjB,YAAY,CAAC0B,OAAO,CAACA,OAAO,CAACI,MAAM,GAAG,CAAC,CAAC,CAACJ,OAAO,EAAE,CAAC,CAC3C,CACR,CAAC,eACNjC,KAAA,CAAAkB,aAAA;MAAKsB,SAAS,EAAC,iBAAiB;MAAArB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC9BxB,KAAA,CAAAkB,aAAA,CAACZ,SAAS;MAAAa,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEc,IAAI,GAAGpC,MAAM,CAACkC,EAAE,CAAC,CAACG,MAAM,CAAC,SAAS,CAAC,GAAGrC,MAAM,CAACkC,EAAE,CAAC,CAACG,MAAM,CAAC,MAAM,CAAa,CAAC,EACvFR,GAAG,IAAI,CAAC,iBAAI/B,KAAA,CAAAkB,aAAA,CAAA6B,MAAA;MAAOP,SAAS,EAAC,eAAe;MAACQ,KAAK,EAAE,CAAE;MAAA7B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CACtD,CACE,CACP,CAAC;EAET,CAAC,CACH,CAAC;AAET,CAAC;AAACyB,aAAA,CA3CIxC,WAAW,yDACEN,WAAW,EACXC,WAAW;AA0C9BK,WAAW,CAACyC,SAAS,GAAG;EACtBxC,KAAK,EAAEL,SAAS,CAAC8C;AACnB,CAAC;AAAC,MAAAC,QAAA,GACa3C,WAAW;AAA1B,eAAA2C,QAAA;AAA2B;AAAA;EAAA,IAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA;EAAA,KAAAH,cAAA;IAAA;EAAA;EAAAA,cAAA,CAAAI,QAAA,CA/CrBhD,WAAW;EAAA4C,cAAA,CAAAI,QAAA,CAAAL,QAAA;AAAA;AAAA;AAAA;EAAA,IAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA;EAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA;AAAA"},"metadata":{},"sourceType":"module"}