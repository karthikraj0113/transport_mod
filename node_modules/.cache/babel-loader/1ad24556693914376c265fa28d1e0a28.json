{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.STRATEGIES = undefined;\nexports.initEnterprise = initEnterprise;\nexports.defaultEnterpriseConnection = defaultEnterpriseConnection;\nexports.defaultEnterpriseConnectionName = defaultEnterpriseConnectionName;\nexports.enterpriseActiveFlowConnection = enterpriseActiveFlowConnection;\nexports.matchConnection = matchConnection;\nexports.isEnterpriseDomain = isEnterpriseDomain;\nexports.enterpriseDomain = enterpriseDomain;\nexports.quickAuthConnection = quickAuthConnection;\nexports.isADEnabled = isADEnabled;\nexports.findADConnectionWithoutDomain = findADConnectionWithoutDomain;\nexports.isInCorpNetwork = isInCorpNetwork;\nexports.corpNetworkConnection = corpNetworkConnection;\nexports.isSingleHRDConnection = isSingleHRDConnection;\nexports.isHRDDomain = isHRDDomain;\nexports.toggleHRD = toggleHRD;\nexports.isHRDActive = isHRDActive;\nexports.isHRDEmailValid = isHRDEmailValid;\nvar _immutable = require('immutable');\nvar _immutable2 = _interopRequireDefault(_immutable);\nvar _index = require('../core/index');\nvar l = _interopRequireWildcard(_index);\nvar _index2 = require('../field/index');\nvar c = _interopRequireWildcard(_index2);\nvar _data_utils = require('../utils/data_utils');\nvar _email = require('../field/email');\nvar _username = require('../field/username');\nvar _classic = require('../engine/classic');\nvar _index3 = require('./database/index');\nvar _index4 = require('../store/index');\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar _dataFns = (0, _data_utils.dataFns)(['enterprise']),\n  get = _dataFns.get,\n  initNS = _dataFns.initNS,\n  tget = _dataFns.tget,\n  tremove = _dataFns.tremove,\n  tset = _dataFns.tset;\nvar _dataFns2 = (0, _data_utils.dataFns)(['core']),\n  tremoveCore = _dataFns2.tremove,\n  tsetCore = _dataFns2.tset,\n  tgetCore = _dataFns2.tget;\n\n// TODO: Android version also has \"google-opendid\" in the list, but we\n// consider it to be a social connection. See\n// https://github.com/auth0/Lock.Android/blob/98262cb7110e5d1c8a97e1129faf2621c1d8d111/lock/src/main/java/com/auth0/android/lock/utils/Strategies.java\n\nvar STRATEGIES = exports.STRATEGIES = {\n  ad: 'AD / LDAP',\n  adfs: 'ADFS',\n  'auth0-adldap': 'AD/LDAP',\n  'auth0-oidc': 'Auth0 OpenID Connect',\n  custom: 'Custom Auth',\n  'google-apps': 'Google Apps',\n  ip: 'IP Address',\n  mscrm: 'Dynamics CRM',\n  office365: 'Office365',\n  pingfederate: 'Ping Federate',\n  samlp: 'SAML',\n  sharepoint: 'SharePoint Apps',\n  waad: 'Windows Azure AD',\n  oidc: 'OpenID Connect',\n  okta: 'Okta Workforce'\n};\nfunction initEnterprise(m, opts) {\n  return initNS(m, _immutable2.default.fromJS(processOptions(opts)));\n}\nfunction processOptions(opts) {\n  var defaultEnterpriseConnection = opts.defaultEnterpriseConnection;\n  if (defaultEnterpriseConnection != undefined && typeof defaultEnterpriseConnection !== 'string') {\n    l.warn(opts, 'The `defaultEnterpriseConnection` option will be ignored, because it is not a string.');\n    defaultEnterpriseConnection = undefined;\n  }\n  return defaultEnterpriseConnection === undefined ? {} : {\n    defaultConnectionName: defaultEnterpriseConnection\n  };\n}\nfunction defaultEnterpriseConnection(m) {\n  var name = defaultEnterpriseConnectionName(m);\n  return name && findADConnectionWithoutDomain(m, name);\n}\nfunction defaultEnterpriseConnectionName(m) {\n  return get(m, 'defaultConnectionName');\n}\nfunction enterpriseActiveFlowConnection(m) {\n  if (isHRDActive(m)) {\n    // HRD is active when an email matched or there is only one\n    // connection and it is enterprise\n    var email = tget(m, 'hrdEmail', '');\n    return matchConnection(m, email) || findActiveFlowConnection(m);\n  } else {\n    return defaultEnterpriseConnection(m) || findADConnectionWithoutDomain(m);\n  }\n}\nfunction matchConnection(m, email) {\n  var strategies = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var target = (0, _email.emailDomain)(email);\n  if (!target) return false;\n  return l.connections.apply(l, [m, 'enterprise'].concat(strategies)).find(function (x) {\n    return x.get('domains').contains(target);\n  });\n}\nfunction isEnterpriseDomain(m, email) {\n  var strategies = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  return !!matchConnection(m, email, strategies);\n}\nfunction enterpriseDomain(m) {\n  return isSingleHRDConnection(m) ? l.connections(m, 'enterprise').getIn([0, 'domains', 0]) : (0, _email.emailDomain)(tget(m, 'hrdEmail'));\n}\nfunction quickAuthConnection(m) {\n  return !isADEnabled(m) && l.hasOneConnection(m, 'enterprise') ? l.connections(m, 'enterprise').get(0) : null;\n}\n\n// ad / adldap\n// https://github.com/auth0/Lock.Android/blob/0145b6853a8de0df5e63ef22e4e2bc40be97ad9e/lock/src/main/java/com/auth0/android/lock/utils/Strategy.java#L67\n\nfunction isADEnabled(m) {\n  return l.hasSomeConnections(m, 'enterprise', 'ad', 'auth0-adldap');\n}\nfunction findADConnectionWithoutDomain(m) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  return l.connections(m, 'enterprise', 'ad', 'auth0-adldap').find(function (x) {\n    return x.get('domains').isEmpty() && (!name || x.get('name') === name);\n  });\n}\nfunction findActiveFlowConnection(m) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  return l.connections(m, 'enterprise', 'ad', 'auth0-adldap').find(function (x) {\n    return !name || x.get('name') === name;\n  });\n}\n\n// kerberos\n\nfunction isInCorpNetwork(m) {\n  return corpNetworkConnection(m) !== undefined;\n}\nfunction corpNetworkConnection(m) {\n  // Information about connection is stored in to flat properties connection and strategy.\n  // If connection is present, strategy will always be present as defined by the server.\n  var name = m.getIn(['sso', 'connection']);\n  var strategy = m.getIn(['sso', 'strategy']);\n  return name && strategy && _immutable2.default.Map({\n    name: name,\n    strategy: strategy\n  });\n}\n\n// hrd\n\nfunction isSingleHRDConnection(m) {\n  return isADEnabled(m) && l.connections(m).count() === 1;\n}\nfunction isHRDDomain(m, email) {\n  return isEnterpriseDomain(m, email, ['ad', 'auth0-adldap']);\n}\nfunction toggleHRD(m, email) {\n  if (email) {\n    var username = l.defaultADUsernameFromEmailPrefix(m) ? (0, _email.emailLocalPart)(email) : email;\n    m = (0, _username.setUsername)(m, username, 'username', false);\n    m = tset(m, 'hrdEmail', email);\n  } else {\n    var hrdEmail = tget(m, 'hrdEmail');\n    if (hrdEmail) {\n      m = (0, _username.setUsername)(m, hrdEmail, 'email', false);\n    }\n    m = tremove(m, 'hrdEmail');\n  }\n  return tset(m, 'hrd', !!email);\n}\nfunction isHRDActive(m) {\n  return tget(m, 'hrd', isSingleHRDConnection(m));\n}\nfunction isHRDEmailValid(m, str) {\n  if ((0, _email.isEmail)(str) && !l.hasSomeConnections(m, 'database') && !l.hasSomeConnections(m, 'passwordless') && !findADConnectionWithoutDomain(m) && !(0, _classic.matchesEnterpriseConnection)(m, str)) {\n    return false;\n  }\n  return true;\n}","map":{"version":3,"names":["exports","__esModule","STRATEGIES","undefined","initEnterprise","defaultEnterpriseConnection","defaultEnterpriseConnectionName","enterpriseActiveFlowConnection","matchConnection","isEnterpriseDomain","enterpriseDomain","quickAuthConnection","isADEnabled","findADConnectionWithoutDomain","isInCorpNetwork","corpNetworkConnection","isSingleHRDConnection","isHRDDomain","toggleHRD","isHRDActive","isHRDEmailValid","_immutable","require","_immutable2","_interopRequireDefault","_index","l","_interopRequireWildcard","_index2","c","_data_utils","_email","_username","_classic","_index3","_index4","obj","newObj","key","Object","prototype","hasOwnProperty","call","default","_dataFns","dataFns","get","initNS","tget","tremove","tset","_dataFns2","tremoveCore","tsetCore","tgetCore","ad","adfs","custom","ip","mscrm","office365","pingfederate","samlp","sharepoint","waad","oidc","okta","m","opts","fromJS","processOptions","warn","defaultConnectionName","name","email","findActiveFlowConnection","strategies","arguments","length","target","emailDomain","connections","apply","concat","find","x","contains","getIn","hasOneConnection","hasSomeConnections","isEmpty","strategy","Map","count","username","defaultADUsernameFromEmailPrefix","emailLocalPart","setUsername","hrdEmail","str","isEmail","matchesEnterpriseConnection"],"sources":["C:/Users/diskk/OneDrive/Desktop/New folder/Transport_modal/node_modules/auth0-lock/lib/connection/enterprise.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.STRATEGIES = undefined;\nexports.initEnterprise = initEnterprise;\nexports.defaultEnterpriseConnection = defaultEnterpriseConnection;\nexports.defaultEnterpriseConnectionName = defaultEnterpriseConnectionName;\nexports.enterpriseActiveFlowConnection = enterpriseActiveFlowConnection;\nexports.matchConnection = matchConnection;\nexports.isEnterpriseDomain = isEnterpriseDomain;\nexports.enterpriseDomain = enterpriseDomain;\nexports.quickAuthConnection = quickAuthConnection;\nexports.isADEnabled = isADEnabled;\nexports.findADConnectionWithoutDomain = findADConnectionWithoutDomain;\nexports.isInCorpNetwork = isInCorpNetwork;\nexports.corpNetworkConnection = corpNetworkConnection;\nexports.isSingleHRDConnection = isSingleHRDConnection;\nexports.isHRDDomain = isHRDDomain;\nexports.toggleHRD = toggleHRD;\nexports.isHRDActive = isHRDActive;\nexports.isHRDEmailValid = isHRDEmailValid;\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _index = require('../core/index');\n\nvar l = _interopRequireWildcard(_index);\n\nvar _index2 = require('../field/index');\n\nvar c = _interopRequireWildcard(_index2);\n\nvar _data_utils = require('../utils/data_utils');\n\nvar _email = require('../field/email');\n\nvar _username = require('../field/username');\n\nvar _classic = require('../engine/classic');\n\nvar _index3 = require('./database/index');\n\nvar _index4 = require('../store/index');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _dataFns = (0, _data_utils.dataFns)(['enterprise']),\n    get = _dataFns.get,\n    initNS = _dataFns.initNS,\n    tget = _dataFns.tget,\n    tremove = _dataFns.tremove,\n    tset = _dataFns.tset;\n\nvar _dataFns2 = (0, _data_utils.dataFns)(['core']),\n    tremoveCore = _dataFns2.tremove,\n    tsetCore = _dataFns2.tset,\n    tgetCore = _dataFns2.tget;\n\n// TODO: Android version also has \"google-opendid\" in the list, but we\n// consider it to be a social connection. See\n// https://github.com/auth0/Lock.Android/blob/98262cb7110e5d1c8a97e1129faf2621c1d8d111/lock/src/main/java/com/auth0/android/lock/utils/Strategies.java\n\n\nvar STRATEGIES = exports.STRATEGIES = {\n  ad: 'AD / LDAP',\n  adfs: 'ADFS',\n  'auth0-adldap': 'AD/LDAP',\n  'auth0-oidc': 'Auth0 OpenID Connect',\n  custom: 'Custom Auth',\n  'google-apps': 'Google Apps',\n  ip: 'IP Address',\n  mscrm: 'Dynamics CRM',\n  office365: 'Office365',\n  pingfederate: 'Ping Federate',\n  samlp: 'SAML',\n  sharepoint: 'SharePoint Apps',\n  waad: 'Windows Azure AD',\n  oidc: 'OpenID Connect',\n  okta: 'Okta Workforce'\n};\n\nfunction initEnterprise(m, opts) {\n  return initNS(m, _immutable2.default.fromJS(processOptions(opts)));\n}\n\nfunction processOptions(opts) {\n  var defaultEnterpriseConnection = opts.defaultEnterpriseConnection;\n\n\n  if (defaultEnterpriseConnection != undefined && typeof defaultEnterpriseConnection !== 'string') {\n    l.warn(opts, 'The `defaultEnterpriseConnection` option will be ignored, because it is not a string.');\n    defaultEnterpriseConnection = undefined;\n  }\n\n  return defaultEnterpriseConnection === undefined ? {} : { defaultConnectionName: defaultEnterpriseConnection };\n}\n\nfunction defaultEnterpriseConnection(m) {\n  var name = defaultEnterpriseConnectionName(m);\n  return name && findADConnectionWithoutDomain(m, name);\n}\n\nfunction defaultEnterpriseConnectionName(m) {\n  return get(m, 'defaultConnectionName');\n}\n\nfunction enterpriseActiveFlowConnection(m) {\n  if (isHRDActive(m)) {\n    // HRD is active when an email matched or there is only one\n    // connection and it is enterprise\n    var email = tget(m, 'hrdEmail', '');\n    return matchConnection(m, email) || findActiveFlowConnection(m);\n  } else {\n    return defaultEnterpriseConnection(m) || findADConnectionWithoutDomain(m);\n  }\n}\n\nfunction matchConnection(m, email) {\n  var strategies = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  var target = (0, _email.emailDomain)(email);\n  if (!target) return false;\n  return l.connections.apply(l, [m, 'enterprise'].concat(strategies)).find(function (x) {\n    return x.get('domains').contains(target);\n  });\n}\n\nfunction isEnterpriseDomain(m, email) {\n  var strategies = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  return !!matchConnection(m, email, strategies);\n}\n\nfunction enterpriseDomain(m) {\n  return isSingleHRDConnection(m) ? l.connections(m, 'enterprise').getIn([0, 'domains', 0]) : (0, _email.emailDomain)(tget(m, 'hrdEmail'));\n}\n\nfunction quickAuthConnection(m) {\n  return !isADEnabled(m) && l.hasOneConnection(m, 'enterprise') ? l.connections(m, 'enterprise').get(0) : null;\n}\n\n// ad / adldap\n// https://github.com/auth0/Lock.Android/blob/0145b6853a8de0df5e63ef22e4e2bc40be97ad9e/lock/src/main/java/com/auth0/android/lock/utils/Strategy.java#L67\n\nfunction isADEnabled(m) {\n  return l.hasSomeConnections(m, 'enterprise', 'ad', 'auth0-adldap');\n}\n\nfunction findADConnectionWithoutDomain(m) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n  return l.connections(m, 'enterprise', 'ad', 'auth0-adldap').find(function (x) {\n    return x.get('domains').isEmpty() && (!name || x.get('name') === name);\n  });\n}\n\nfunction findActiveFlowConnection(m) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n  return l.connections(m, 'enterprise', 'ad', 'auth0-adldap').find(function (x) {\n    return !name || x.get('name') === name;\n  });\n}\n\n// kerberos\n\nfunction isInCorpNetwork(m) {\n  return corpNetworkConnection(m) !== undefined;\n}\n\nfunction corpNetworkConnection(m) {\n  // Information about connection is stored in to flat properties connection and strategy.\n  // If connection is present, strategy will always be present as defined by the server.\n  var name = m.getIn(['sso', 'connection']);\n  var strategy = m.getIn(['sso', 'strategy']);\n\n  return name && strategy && _immutable2.default.Map({ name: name, strategy: strategy });\n}\n\n// hrd\n\nfunction isSingleHRDConnection(m) {\n  return isADEnabled(m) && l.connections(m).count() === 1;\n}\n\nfunction isHRDDomain(m, email) {\n  return isEnterpriseDomain(m, email, ['ad', 'auth0-adldap']);\n}\n\nfunction toggleHRD(m, email) {\n  if (email) {\n    var username = l.defaultADUsernameFromEmailPrefix(m) ? (0, _email.emailLocalPart)(email) : email;\n\n    m = (0, _username.setUsername)(m, username, 'username', false);\n    m = tset(m, 'hrdEmail', email);\n  } else {\n    var hrdEmail = tget(m, 'hrdEmail');\n    if (hrdEmail) {\n      m = (0, _username.setUsername)(m, hrdEmail, 'email', false);\n    }\n    m = tremove(m, 'hrdEmail');\n  }\n\n  return tset(m, 'hrd', !!email);\n}\n\nfunction isHRDActive(m) {\n  return tget(m, 'hrd', isSingleHRDConnection(m));\n}\n\nfunction isHRDEmailValid(m, str) {\n  if ((0, _email.isEmail)(str) && !l.hasSomeConnections(m, 'database') && !l.hasSomeConnections(m, 'passwordless') && !findADConnectionWithoutDomain(m) && !(0, _classic.matchesEnterpriseConnection)(m, str)) {\n    return false;\n  }\n\n  return true;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}