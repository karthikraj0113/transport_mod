{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/objectWithoutPropertiesLoose';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport { SVGInjector } from '@tanem/svg-injector';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\n// Hat-tip: https://github.com/developit/preact-compat/blob/master/src/index.js#L402.\nvar shallowDiffers = function shallowDiffers(a, b) {\n  for (var i in a) {\n    if (!(i in b)) {\n      return true;\n    }\n  }\n  for (var _i in b) {\n    if (a[_i] !== b[_i]) {\n      return true;\n    }\n  }\n  return false;\n};\nvar _excluded = [\"afterInjection\", \"beforeInjection\", \"evalScripts\", \"fallback\", \"httpRequestWithCredentials\", \"loading\", \"renumerateIRIElements\", \"src\", \"useRequestCache\", \"wrapper\"];\nvar svgNamespace = 'http://www.w3.org/2000/svg';\nvar xlinkNamespace = 'http://www.w3.org/1999/xlink';\nvar ReactSVG = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ReactSVG, _React$Component);\n  function ReactSVG() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.initialState = {\n      hasError: false,\n      isLoading: true\n    };\n    _this.state = _this.initialState;\n    _this._isMounted = false;\n    _this.reactWrapper = void 0;\n    _this.nonReactWrapper = void 0;\n    _this.refCallback = function (reactWrapper) {\n      _this.reactWrapper = reactWrapper;\n    };\n    return _this;\n  }\n  var _proto = ReactSVG.prototype;\n  _proto.renderSVG = function renderSVG() {\n    var _this2 = this;\n\n    /* istanbul ignore else */\n    if (this.reactWrapper instanceof Node) {\n      var _this$props = this.props,\n        beforeInjection = _this$props.beforeInjection,\n        evalScripts = _this$props.evalScripts,\n        httpRequestWithCredentials = _this$props.httpRequestWithCredentials,\n        renumerateIRIElements = _this$props.renumerateIRIElements,\n        src = _this$props.src,\n        useRequestCache = _this$props.useRequestCache;\n      /* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n      var afterInjection = this.props.afterInjection;\n      var wrapper = this.props.wrapper;\n      /* eslint-enable @typescript-eslint/no-non-null-assertion */\n\n      var nonReactWrapper;\n      var nonReactTarget;\n      if (wrapper === 'svg') {\n        nonReactWrapper = document.createElementNS(svgNamespace, wrapper);\n        nonReactWrapper.setAttribute('xmlns', svgNamespace);\n        nonReactWrapper.setAttribute('xmlns:xlink', xlinkNamespace);\n        nonReactTarget = document.createElementNS(svgNamespace, wrapper);\n      } else {\n        nonReactWrapper = document.createElement(wrapper);\n        nonReactTarget = document.createElement(wrapper);\n      }\n      nonReactWrapper.appendChild(nonReactTarget);\n      nonReactTarget.dataset.src = src;\n      this.nonReactWrapper = this.reactWrapper.appendChild(nonReactWrapper);\n      var afterEach = function afterEach(error, svg) {\n        if (error) {\n          _this2.removeSVG();\n          if (!_this2._isMounted) {\n            afterInjection(error);\n            return;\n          }\n        } // TODO (Tane): It'd be better to cleanly unsubscribe from SVGInjector\n        // callbacks instead of tracking a property like this.\n\n        if (_this2._isMounted) {\n          _this2.setState(function () {\n            return {\n              hasError: !!error,\n              isLoading: false\n            };\n          }, function () {\n            afterInjection(error, svg);\n          });\n        }\n      };\n      SVGInjector(nonReactTarget, {\n        afterEach: afterEach,\n        beforeEach: beforeInjection,\n        cacheRequests: useRequestCache,\n        evalScripts: evalScripts,\n        httpRequestWithCredentials: httpRequestWithCredentials,\n        renumerateIRIElements: renumerateIRIElements\n      });\n    }\n  };\n  _proto.removeSVG = function removeSVG() {\n    var _this$nonReactWrapper;\n    if ((_this$nonReactWrapper = this.nonReactWrapper) != null && _this$nonReactWrapper.parentNode) {\n      this.nonReactWrapper.parentNode.removeChild(this.nonReactWrapper);\n      this.nonReactWrapper = null;\n    }\n  };\n  _proto.componentDidMount = function componentDidMount() {\n    this._isMounted = true;\n    this.renderSVG();\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this3 = this;\n    if (shallowDiffers(prevProps, this.props)) {\n      this.setState(function () {\n        return _this3.initialState;\n      }, function () {\n        _this3.removeSVG();\n        _this3.renderSVG();\n      });\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this._isMounted = false;\n    this.removeSVG();\n  };\n  _proto.render = function render() {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    var _this$props2 = this.props;\n    _this$props2.afterInjection;\n    _this$props2.beforeInjection;\n    _this$props2.evalScripts;\n    var Fallback = _this$props2.fallback;\n    _this$props2.httpRequestWithCredentials;\n    var Loading = _this$props2.loading;\n    _this$props2.renumerateIRIElements;\n    _this$props2.src;\n    _this$props2.useRequestCache;\n    var wrapper = _this$props2.wrapper,\n      rest = _objectWithoutPropertiesLoose(_this$props2, _excluded);\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    var Wrapper = wrapper;\n    return /*#__PURE__*/React.createElement(Wrapper, _extends({}, rest, {\n      ref: this.refCallback\n    }, wrapper === 'svg' ? {\n      xmlns: svgNamespace,\n      xmlnsXlink: xlinkNamespace\n    } : {}), this.state.isLoading && Loading && /*#__PURE__*/React.createElement(Loading, null), this.state.hasError && Fallback && /*#__PURE__*/React.createElement(Fallback, null));\n  };\n  return ReactSVG;\n}(React.Component);\nReactSVG.defaultProps = {\n  afterInjection: function afterInjection() {\n    return undefined;\n  },\n  beforeInjection: function beforeInjection() {\n    return undefined;\n  },\n  evalScripts: 'never',\n  fallback: null,\n  httpRequestWithCredentials: false,\n  loading: null,\n  renumerateIRIElements: true,\n  useRequestCache: true,\n  wrapper: 'div'\n};\nReactSVG.propTypes = {\n  afterInjection: PropTypes.func,\n  beforeInjection: PropTypes.func,\n  evalScripts: PropTypes.oneOf(['always', 'once', 'never']),\n  fallback: PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.string]),\n  httpRequestWithCredentials: PropTypes.bool,\n  loading: PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.string]),\n  renumerateIRIElements: PropTypes.bool,\n  src: PropTypes.string.isRequired,\n  useRequestCache: PropTypes.bool,\n  wrapper: PropTypes.oneOf(['div', 'span', 'svg'])\n};\nexport { ReactSVG };","map":null,"metadata":{},"sourceType":"module"}