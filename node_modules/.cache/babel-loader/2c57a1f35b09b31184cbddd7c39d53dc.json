{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n}), exports.createCallable = createCallable, exports.getChanges = getChanges, Object.defineProperty(exports, \"getEventsFromInput\", {\n  enumerable: !0,\n  get: function get() {\n    return _events.getEventsFromInput;\n  }\n}), exports.invokeArrayQuery = invokeArrayQuery, exports.isString = isString, exports.wrapDisplayName = wrapDisplayName;\nvar _filter2 = _interopRequireDefault(require(\"lodash/filter\")),\n  _some2 = _interopRequireDefault(require(\"lodash/some\")),\n  _isEqual2 = _interopRequireDefault(require(\"lodash/isEqual\")),\n  _constant2 = _interopRequireDefault(require(\"lodash/constant\")),\n  _events = require(\"./events\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction isString(varToCheck) {\n  return \"string\" == typeof varToCheck || varToCheck instanceof String;\n}\nfunction createCallable(f) {\n  return \"function\" == typeof f ? f : (0, _constant2.default)(f);\n}\nfunction invokeArrayQuery(f, props) {\n  var result = createCallable(f)(props);\n  return Array.isArray(result) ? result : result ? [result] : null;\n}\nfunction getDisplayName(Component) {\n  return \"string\" == typeof Component ? Component : Component ? Component.displayName || Component.name || \"Component\" : void 0;\n}\nfunction wrapDisplayName(BaseComponent, hocName) {\n  return \"\".concat(hocName, \"(\").concat(getDisplayName(BaseComponent), \")\");\n}\nfunction getChanges() {\n  var data = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : [],\n    prevData = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : [],\n    result = {};\n  return result.added = (0, _filter2.default)(data, function (d) {\n    return !(0, _some2.default)(prevData, function (p) {\n      return (0, _isEqual2.default)(d, p);\n    });\n  }), result.removed = (0, _filter2.default)(prevData, function (p) {\n    return !(0, _some2.default)(data, function (d) {\n      return (0, _isEqual2.default)(p, d);\n    });\n  }), result;\n}","map":{"version":3,"sources":["../../src/utils/index.js"],"names":["isString","varToCheck","String","createCallable","f","invokeArrayQuery","props","result","Array","isArray","getDisplayName","Component","displayName","name","wrapDisplayName","BaseComponent","hocName","getChanges","data","prevData","added","d","p","removed"],"mappings":";;;;;;;;;;;;;;;;;;;;AAQO,SAASA,QAAT,CAAkBC,UAAlB,EAA8B;EACnC,OAA6B,QAAtB,IAAA,OAAOA,UAAP,IAAkCA,UAAU,YAAYC,MAChE;AAAA;AAOM,SAASC,cAAT,CAAwBC,CAAxB,EAA2B;EAChC,OAAoB,UAAb,IAAA,OAAOA,CAAP,GAA0BA,CAA1B,GAA8B,CAAA,CAAA,EAAA,UAAA,CAAA,OAAA,EAASA,CAAT,CACtC;AAAA;AASM,SAASC,gBAAT,CAA0BD,CAA1B,EAA6BE,KAA7B,EAAoC;EACzC,IAAMC,MAAM,GAAGJ,cAAc,CAACC,CAAD,CAAdD,CAAkBG,KAAlBH,CAAf;EADyC,OAErCK,KAAK,CAACC,OAAND,CAAcD,MAAdC,CAFqC,GAGhCD,MAHgC,GAKpCA,MALoC,GAQlC,CAACA,MAAD,CARkC,GAMhC,IAGV;AAAA;AASD,SAASG,cAAT,CAAwBC,SAAxB,EAAmC;EAAA,OACR,QAArB,IAAA,OAAOA,SADsB,GAExBA,SAFwB,GAK5BA,SAL4B,GAS1BA,SAAS,CAACC,WAAVD,IAAyBA,SAAS,CAACE,IAAnCF,IAA2C,WATjB,GAAA,KAAA,CAUlC;AAAA;AAQM,SAASG,eAAT,CAAyBC,aAAzB,EAAwCC,OAAxC,EAAiD;EACtD,OAAA,EAAA,CAAA,MAAA,CAAUA,OAAV,EAAA,GAAA,CAAA,CAAA,MAAA,CAAqBN,cAAc,CAACK,aAAD,CAAnC,EAAA,GAAA,CACD;AAAA;AAQM,SAASE,UAAT,CAAA,EAA8C;EAA1BC,IAAAA,IAA0B,GAAA,CAAA,GAAA,SAAA,CAAA,MAAA,IAAA,KAAA,CAAA,KAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAnB,EAAmB;IAAfC,QAAe,GAAA,CAAA,GAAA,SAAA,CAAA,MAAA,IAAA,KAAA,CAAA,KAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;IAC7CZ,MAAM,GAAG,CAAA,CADoC;EAEnDA,OAAAA,MAAM,CAACa,KAAPb,GAAe,CAAA,CAAA,EAAA,QAAA,CAAA,OAAA,EAAOW,IAAP,EAAa,UAACG,CAAD,EAAA;IAAA,OAAO,CAAC,CAAA,CAAA,EAAA,MAAA,CAAA,OAAA,EAAKF,QAAL,EAAe,UAACG,CAAD,EAAA;MAAA,OAAO,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAQD,CAAR,EAAWC,CAAX,CAAP;IAAA,CAAf,CAAR;EAAA,CAAb,CAEf,EADAf,MAAM,CAACgB,OAAPhB,GAAiB,CAAA,CAAA,EAAA,QAAA,CAAA,OAAA,EAAOY,QAAP,EAAiB,UAACG,CAAD,EAAA;IAAA,OAAO,CAAC,CAAA,CAAA,EAAA,MAAA,CAAA,OAAA,EAAKJ,IAAL,EAAW,UAACG,CAAD,EAAA;MAAA,OAAO,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAQC,CAAR,EAAWD,CAAX,CAAP;IAAA,CAAX,CAAR;EAAA,CAAjB,CACjB,EAAOd,MACR;AAAA","sourcesContent":["import { constant, isEqual, some, filter } from 'lodash'\nexport { getEventsFromInput } from './events'\n\n/**\n * Check to see if a variable is a string\n * @param {any} varToCheck - Variable to check for type string\n * @returns {boolean} Whether or not the provided value is a string\n */\nexport function isString(varToCheck) {\n  return typeof varToCheck === 'string' || varToCheck instanceof String\n}\n\n/**\n * @private\n * @param {Function|object|Array|string} f function or value of return for new function\n * @returns {any} Callable\n */\nexport function createCallable(f) {\n  return typeof f === 'function' ? f : constant(f)\n}\n\n/**\n * Invoke function or handle existing array to create array\n * query settings\n * @param {any} f - Function or array of queries\n * @param {object} props - Component props\n * @returns {Array|null} Array of query settings\n */\nexport function invokeArrayQuery(f, props) {\n  const result = createCallable(f)(props)\n  if (Array.isArray(result)) {\n    return result\n  }\n  if (!result) {\n    return null\n  }\n  return [result]\n}\n\n/**\n * Get the displayName field of a component falling\n * back to name field then finally to \"component\".\n * @param {React.Component} Component - Component from\n * which to get displayName\n * @returns {string} Display name of component\n */\nfunction getDisplayName(Component) {\n  if (typeof Component === 'string') {\n    return Component\n  }\n\n  if (!Component) {\n    return undefined\n  }\n\n  return Component.displayName || Component.name || 'Component'\n}\n\n/**\n * Get provided react component's display name and wrap with with a passed name.\n * @param {React.Component} BaseComponent - Component from which to get name to wrap\n * @param {string} hocName - Name of wrapping hoc\n * @returns {string} Wrapped display name for component\n */\nexport function wrapDisplayName(BaseComponent, hocName) {\n  return `${hocName}(${getDisplayName(BaseComponent)})`\n}\n\n/**\n * Get changes between two query settings arrays\n * @param {Array} data - Query settings array\n * @param {Array} prevData - Previous query settings array\n * @returns {object} Object containing added and removed value changes\n */\nexport function getChanges(data = [], prevData = []) {\n  const result = {}\n  result.added = filter(data, (d) => !some(prevData, (p) => isEqual(d, p)))\n  result.removed = filter(prevData, (p) => !some(data, (d) => isEqual(p, d)))\n  return result\n}\n"]},"metadata":{},"sourceType":"script"}