{"ast":null,"code":"\"use strict\";\n\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Layer, SVGOverlay as LeafletSVGOverlay } from 'leaflet';\nimport { createPortal } from 'react-dom';\nimport { withLeaflet } from './context';\nimport MapComponent from './MapComponent';\nfunction setAttribute(el, name, value) {\n  if (value != null) {\n    el.setAttribute(name, value);\n  } else {\n    el.removeAttribute(name);\n  }\n}\nvar SVGOverlay = /*#__PURE__*/function (_MapComponent) {\n  _inheritsLoose(SVGOverlay, _MapComponent);\n  function SVGOverlay(props) {\n    var _this;\n    _this = _MapComponent.call(this, props) || this;\n    _defineProperty(_assertThisInitialized(_this), \"leafletElement\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"container\", void 0);\n    _this.leafletElement = _this.createLeafletElement(props);\n    return _this;\n  }\n  var _proto = SVGOverlay.prototype;\n  _proto.createLeafletElement = function createLeafletElement(props) {\n    var container = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    setAttribute(container, 'xmlns', 'http://www.w3.org/2000/svg');\n    setAttribute(container, 'preserveAspectRatio', props.preserveAspectRatio);\n    setAttribute(container, 'viewBox', props.viewBox);\n    this.container = container;\n    return new LeafletSVGOverlay(container, props.bounds, this.getOptions(props));\n  };\n  _proto.updateLeafletElement = function updateLeafletElement(fromProps, toProps) {\n    if (toProps.bounds !== fromProps.bounds) {\n      this.leafletElement.setBounds(toProps.bounds);\n    }\n    if (toProps.opacity !== fromProps.opacity) {\n      this.leafletElement.setOpacity(toProps.opacity);\n    }\n    if (this.container && toProps.preserveAspectRatio !== fromProps.preserveAspectRatio) {\n      setAttribute(this.container, 'preserveAspectRatio', toProps.preserveAspectRatio);\n    }\n    if (this.container && toProps.viewBox !== fromProps.viewBox) {\n      setAttribute(this.container, 'viewBox', toProps.viewBox);\n    }\n    if (toProps.zIndex !== fromProps.zIndex) {\n      this.leafletElement.setZIndex(toProps.zIndex);\n    }\n  };\n  _proto.componentDidMount = function componentDidMount() {\n    _MapComponent.prototype.componentDidMount.call(this);\n    this.layerContainer.addLayer(this.leafletElement);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    _MapComponent.prototype.componentDidUpdate.call(this, prevProps);\n    if (this.props.attribution !== prevProps.attribution) {\n      var map = this.props.leaflet.map;\n      if (map != null && map.attributionControl != null) {\n        map.attributionControl.removeAttribution(prevProps.attribution);\n        map.attributionControl.addAttribution(this.props.attribution);\n      }\n    }\n    this.updateLeafletElement(prevProps, this.props);\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    _MapComponent.prototype.componentWillUnmount.call(this);\n    this.layerContainer.removeLayer(this.leafletElement);\n    this.container = null;\n  };\n  _proto.render = function render() {\n    var children = this.props.children;\n    if (children == null || this.container == null) {\n      return null;\n    }\n    return /*#__PURE__*/createPortal(children, this.container);\n  };\n  _createClass(SVGOverlay, [{\n    key: \"layerContainer\",\n    get: function get() {\n      return this.props.leaflet.layerContainer || this.props.leaflet.map;\n    }\n  }]);\n  return SVGOverlay;\n}(MapComponent);\nexport default withLeaflet(SVGOverlay);","map":null,"metadata":{},"sourceType":"module"}