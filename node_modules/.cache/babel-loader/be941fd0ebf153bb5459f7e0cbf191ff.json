{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\components\\\\maps\\\\google-maps.js\";\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\nimport React, { useState } from 'react';\nimport { Map, Marker, GoogleApiWrapper, InfoWindow } from 'google-maps-react';\nimport PropTypes from 'prop-types';\nimport { GmapWraper } from './map-style';\nconst apiKey = process.env.REACT_APP_GOOGLE_MAP_KEY;\nconst GoogleMaps = GoogleApiWrapper({\n  apiKey\n})(__signature__(property => {\n  const {\n    latitude,\n    longitude,\n    google,\n    width,\n    height,\n    zoom,\n    mapStyles,\n    place,\n    styles,\n    infoWindow\n  } = property;\n  const [state, setState] = useState({\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {}\n  });\n  const onMarkerClick = (props, marker) => setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true\n  });\n  const onMapClicked = () => {\n    if (state.showingInfoWindow) {\n      setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  const onInfoWindowClose = () => {\n    setState({\n      showingInfoWindow: false\n    });\n  };\n  return /*#__PURE__*/React.createElement(GmapWraper, {\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    onClick: onMapClicked,\n    styles: mapStyles,\n    google: google,\n    style: styles,\n    center: {\n      lat: latitude,\n      lng: longitude\n    },\n    zoom: zoom,\n    height: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, place !== undefined ? place.map(item => {\n    return /*#__PURE__*/React.createElement(Marker, {\n      key: item.id,\n      onClick: onMarkerClick,\n      position: {\n        lat: item.latitude,\n        lng: item.longitude\n      },\n      icon: require(`../../static/img/map/mpc.png`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    });\n  }) : /*#__PURE__*/React.createElement(Marker, {\n    onClick: onMarkerClick,\n    position: {\n      lat: latitude,\n      lng: longitude\n    },\n    icon: require(`../../static/img/map/mpc.png`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoWindow, {\n    onClose: onInfoWindowClose,\n    marker: state.activeMarker,\n    visible: state.showingInfoWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, infoWindow)));\n}, \"useState{[state, setState]({\\r\\n    showingInfoWindow: false,\\r\\n    activeMarker: {},\\r\\n    selectedPlace: {},\\r\\n  })}\"));\nGoogleMaps.defaultProps = {\n  latitude: '50.797897',\n  longitude: '-1.077641',\n  width: '100%',\n  height: '600px',\n  zoom: 13,\n  infoWindow: /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"Hello world\")),\n  styles: {\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0\n  }\n};\nGoogleMaps.propTypes = {\n  latitude: PropTypes.string,\n  longitude: PropTypes.string,\n  google: PropTypes.string,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  zoom: PropTypes.number,\n  place: PropTypes.arrayOf(PropTypes.object),\n  infoWindow: PropTypes.node\n};\nexport { GoogleMaps };\n;\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n  if (!reactHotLoader) {\n    return;\n  }\n  reactHotLoader.register(apiKey, \"apiKey\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\components\\\\maps\\\\google-maps.js\");\n  reactHotLoader.register(GoogleMaps, \"GoogleMaps\", \"C:\\\\Users\\\\diskk\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transport_modal\\\\src\\\\components\\\\maps\\\\google-maps.js\");\n})();\n;\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["React","useState","Map","Marker","GoogleApiWrapper","InfoWindow","PropTypes","GmapWraper","apiKey","process","env","REACT_APP_GOOGLE_MAP_KEY","GoogleMaps","__signature__","property","latitude","longitude","google","width","height","zoom","mapStyles","place","styles","infoWindow","state","setState","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","onMapClicked","onInfoWindowClose","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","center","lat","lng","undefined","map","item","key","id","position","icon","require","onClose","visible","defaultProps","top","left","propTypes","string","number","arrayOf","object","node","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["C:/Users/diskk/OneDrive/Desktop/New folder/Transport_modal/src/components/maps/google-maps.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Map, Marker, GoogleApiWrapper, InfoWindow } from 'google-maps-react';\r\nimport PropTypes from 'prop-types';\r\nimport { GmapWraper } from './map-style';\r\n\r\nconst apiKey = process.env.REACT_APP_GOOGLE_MAP_KEY;\r\nconst GoogleMaps = GoogleApiWrapper({\r\n  apiKey,\r\n})(property => {\r\n  const { latitude, longitude, google, width, height, zoom, mapStyles, place, styles, infoWindow } = property;\r\n  const [state, setState] = useState({\r\n    showingInfoWindow: false,\r\n    activeMarker: {},\r\n    selectedPlace: {},\r\n  });\r\n\r\n  const onMarkerClick = (props, marker) =>\r\n    setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true,\r\n    });\r\n\r\n  const onMapClicked = () => {\r\n    if (state.showingInfoWindow) {\r\n      setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onInfoWindowClose = () => {\r\n    setState({\r\n      showingInfoWindow: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GmapWraper width={width} height={height}>\r\n      <Map\r\n        onClick={onMapClicked}\r\n        styles={mapStyles}\r\n        google={google}\r\n        style={styles}\r\n        center={{ lat: latitude, lng: longitude }}\r\n        zoom={zoom}\r\n        height=\"400px\"\r\n      >\r\n        {place !== undefined ? (\r\n          place.map(item => {\r\n            return (\r\n              <Marker\r\n                key={item.id}\r\n                onClick={onMarkerClick}\r\n                position={{ lat: item.latitude, lng: item.longitude }}\r\n                icon={require(`../../static/img/map/mpc.png`)}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <Marker\r\n            onClick={onMarkerClick}\r\n            position={{ lat: latitude, lng: longitude }}\r\n            icon={require(`../../static/img/map/mpc.png`)}\r\n          />\r\n        )}\r\n        <InfoWindow onClose={onInfoWindowClose} marker={state.activeMarker} visible={state.showingInfoWindow}>\r\n          {infoWindow}\r\n        </InfoWindow>\r\n      </Map>\r\n    </GmapWraper>\r\n  );\r\n});\r\n\r\nGoogleMaps.defaultProps = {\r\n  latitude: '50.797897',\r\n  longitude: '-1.077641',\r\n  width: '100%',\r\n  height: '600px',\r\n  zoom: 13,\r\n  infoWindow: (\r\n    <div>\r\n      <h1>Hello world</h1>\r\n    </div>\r\n  ),\r\n\r\n  styles: {\r\n    width: '100%',\r\n    height: '100%',\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n};\r\n\r\nGoogleMaps.propTypes = {\r\n  latitude: PropTypes.string,\r\n  longitude: PropTypes.string,\r\n  google: PropTypes.string,\r\n  width: PropTypes.string,\r\n  height: PropTypes.string,\r\n  zoom: PropTypes.number,\r\n  place: PropTypes.arrayOf(PropTypes.object),\r\n  infoWindow: PropTypes.node,\r\n};\r\n\r\nexport { GoogleMaps };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}