{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n}), exports.authErrorReducer = authErrorReducer, exports.authReducer = authReducer, exports.dataReducer = void 0, exports.errorsReducer = errorsReducer, exports.isInitializingReducer = isInitializingReducer, exports.orderedReducer = exports.listenersReducer = void 0, exports.profileReducer = profileReducer, exports.requestedReducer = requestedReducer, exports.requestingReducer = requestingReducer, exports.timestampsReducer = timestampsReducer;\nvar _assign2 = _interopRequireDefault(require(\"lodash/fp/assign\")),\n  _setWith2 = _interopRequireDefault(require(\"lodash/fp/setWith\")),\n  _isObject2 = _interopRequireDefault(require(\"lodash/isObject\")),\n  _get2 = _interopRequireDefault(require(\"lodash/get\")),\n  _omit2 = _interopRequireDefault(require(\"lodash/omit\")),\n  _pick2 = _interopRequireDefault(require(\"lodash/pick\")),\n  _constants = require(\"./constants\"),\n  _reducers = require(\"./utils/reducers\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (o) {\n    if (\"string\" == typeof o) return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    return \"Object\" === n && o.constructor && (n = o.constructor.name), \"Map\" === n || \"Set\" === n ? Array.from(o) : \"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(o, minLen) : void 0;\n  }\n}\nfunction _iterableToArray(iter) {\n  if (\"undefined\" != typeof Symbol && null != iter[Symbol.iterator] || null != iter[\"@@iterator\"]) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  (null == len || len > arr.length) && (len = arr.length);\n  for (var i = 0, arr2 = Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var source, i = 1; i < arguments.length; i++) source = null == arguments[i] ? {} : arguments[i], i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n    _defineProperty(target, key, source[key]);\n  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n  });\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  return key in obj ? Object.defineProperty(obj, key, {\n    value: value,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : obj[key] = value, obj;\n}\nvar START = _constants.actionTypes.START,\n  SET = _constants.actionTypes.SET,\n  SET_PROFILE = _constants.actionTypes.SET_PROFILE,\n  MERGE = _constants.actionTypes.MERGE,\n  LOGIN = _constants.actionTypes.LOGIN,\n  LOGOUT = _constants.actionTypes.LOGOUT,\n  LOGIN_ERROR = _constants.actionTypes.LOGIN_ERROR,\n  CLEAR_ERRORS = _constants.actionTypes.CLEAR_ERRORS,\n  REMOVE = _constants.actionTypes.REMOVE,\n  NO_VALUE = _constants.actionTypes.NO_VALUE,\n  SET_LISTENER = _constants.actionTypes.SET_LISTENER,\n  UNSET_LISTENER = _constants.actionTypes.UNSET_LISTENER,\n  AUTHENTICATION_INIT_STARTED = _constants.actionTypes.AUTHENTICATION_INIT_STARTED,\n  AUTHENTICATION_INIT_FINISHED = _constants.actionTypes.AUTHENTICATION_INIT_FINISHED,\n  AUTH_EMPTY_CHANGE = _constants.actionTypes.AUTH_EMPTY_CHANGE,\n  AUTH_LINK_SUCCESS = _constants.actionTypes.AUTH_LINK_SUCCESS,\n  UNAUTHORIZED_ERROR = _constants.actionTypes.UNAUTHORIZED_ERROR,\n  AUTH_UPDATE_SUCCESS = _constants.actionTypes.AUTH_UPDATE_SUCCESS,\n  AUTH_RELOAD_SUCCESS = _constants.actionTypes.AUTH_RELOAD_SUCCESS,\n  PROFILE_UPDATE_SUCCESS = _constants.actionTypes.PROFILE_UPDATE_SUCCESS;\nfunction isInitializingReducer() {\n  var state = !!(0 < arguments.length && arguments[0] !== void 0) && arguments[0],\n    action = 1 < arguments.length ? arguments[1] : void 0;\n  switch (action.type) {\n    case AUTHENTICATION_INIT_STARTED:\n      return !0;\n    case AUTHENTICATION_INIT_FINISHED:\n      return !1;\n    default:\n      return state;\n  }\n}\nfunction requestingReducer() {\n  var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {},\n    _ref = 1 < arguments.length ? arguments[1] : void 0,\n    type = _ref.type,\n    path = _ref.path;\n  return type === START ? _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, (0, _reducers.getSlashStrPath)(path), !0)) : type === NO_VALUE || type === SET ? _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, (0, _reducers.getSlashStrPath)(path), !1)) : state;\n}\nfunction requestedReducer() {\n  var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {},\n    _ref2 = 1 < arguments.length ? arguments[1] : void 0,\n    type = _ref2.type,\n    path = _ref2.path;\n  return type === START ? _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, (0, _reducers.getSlashStrPath)(path), !1)) : type === NO_VALUE || type === SET ? _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, (0, _reducers.getSlashStrPath)(path), !0)) : state;\n}\nfunction timestampsReducer() {\n  var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {},\n    _ref3 = 1 < arguments.length ? arguments[1] : void 0,\n    type = _ref3.type,\n    path = _ref3.path;\n  return type === START || type === NO_VALUE || type === SET ? _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, (0, _reducers.getSlashStrPath)(path), Date.now())) : state;\n}\nfunction createDataReducer() {\n  var actionKey = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : \"data\";\n  return function () {\n    var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {},\n      action = 1 < arguments.length ? arguments[1] : void 0;\n    switch (action.type) {\n      case SET:\n        return (0, _setWith2.default)(Object, (0, _reducers.getDotStrPath)(action.path), action[actionKey], state);\n      case MERGE:\n        var previousData = (0, _get2.default)(state, (0, _reducers.getDotStrPath)(action.path), {}),\n          mergedData = (0, _assign2.default)(previousData, action[actionKey]);\n        return (0, _setWith2.default)(Object, (0, _reducers.getDotStrPath)(action.path), mergedData, state);\n      case NO_VALUE:\n        return (0, _setWith2.default)(Object, (0, _reducers.getDotStrPath)(action.path), null, state);\n      case REMOVE:\n        return \"data\" === actionKey ? (0, _reducers.recursiveUnset)((0, _reducers.getDotStrPath)(action.path), state) : state;\n      case LOGOUT:\n        if (action.preserve) {\n          if (Array.isArray(action.preserve)) return (0, _pick2.default)(state, action.preserve);\n          if ((0, _isObject2.default)(action.preserve)) return action.preserve[actionKey] ? (0, _reducers.preserveValuesFromState)(state, action.preserve[actionKey], {}) : {};\n          throw new Error(\"Invalid preserve parameter. It must be an Object or an Array\");\n        }\n        return {};\n      default:\n        return state;\n    }\n  };\n}\nfunction authReducer() {\n  var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {\n      isLoaded: !1,\n      isEmpty: !0\n    },\n    action = 1 < arguments.length ? arguments[1] : void 0;\n  switch (action.type) {\n    case LOGIN:\n    case AUTH_UPDATE_SUCCESS:\n      if (!action.auth) return {\n        isEmpty: !0,\n        isLoaded: !0\n      };\n      var auth = action.auth.toJSON ? action.auth.toJSON() : action.auth;\n      return action.preserve && action.preserve.auth ? (0, _reducers.preserveValuesFromState)(state, action.preserve.auth, _objectSpread(_objectSpread({}, auth), {}, {\n        isEmpty: !1,\n        isLoaded: !0\n      })) : _objectSpread(_objectSpread({}, auth), {}, {\n        isEmpty: !1,\n        isLoaded: !0\n      });\n    case AUTH_LINK_SUCCESS:\n    case AUTH_RELOAD_SUCCESS:\n      return action.payload ? _objectSpread(_objectSpread({}, action.payload.toJSON ? action.payload.toJSON() : action.payload), {}, {\n        isEmpty: !1,\n        isLoaded: !0\n      }) : {\n        isEmpty: !0,\n        isLoaded: !0\n      };\n    case LOGIN_ERROR:\n    case AUTH_EMPTY_CHANGE:\n    case LOGOUT:\n      return action.reauthenticate ? (0, _reducers.preserveValuesFromState)(state, !0, {}) : action.preserve && action.preserve.auth ? (0, _reducers.preserveValuesFromState)(state, action.preserve.auth, {\n        isLoaded: !0,\n        isEmpty: !0\n      }) : {\n        isLoaded: !0,\n        isEmpty: !0\n      };\n    default:\n      return state;\n  }\n}\nfunction authErrorReducer() {\n  var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : null,\n    action = 1 < arguments.length ? arguments[1] : void 0;\n  switch (action.type) {\n    case LOGIN:\n    case LOGOUT:\n      return null;\n    case LOGIN_ERROR:\n    case UNAUTHORIZED_ERROR:\n      return action.authError;\n    default:\n      return state;\n  }\n}\nfunction profileReducer() {\n  var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {\n      isLoaded: !1,\n      isEmpty: !0\n    },\n    action = 1 < arguments.length ? arguments[1] : void 0;\n  switch (action.type) {\n    case SET_PROFILE:\n      return action.profile ? _objectSpread(_objectSpread({}, action.profile), {}, {\n        isEmpty: !1,\n        isLoaded: !0\n      }) : _objectSpread(_objectSpread({}, state), {}, {\n        isEmpty: !0,\n        isLoaded: !0\n      });\n    case PROFILE_UPDATE_SUCCESS:\n      return Object.assign({}, state, action.payload);\n    case LOGIN:\n      return action.preserve && action.preserve.profile ? (0, _reducers.preserveValuesFromState)(state, action.preserve.profile, {\n        isLoaded: !0,\n        isEmpty: !0\n      }) : {\n        isEmpty: !0,\n        isLoaded: !1\n      };\n    case LOGOUT:\n    case AUTH_EMPTY_CHANGE:\n      return action.preserve && action.preserve.profile ? (0, _reducers.preserveValuesFromState)(state, action.preserve.profile, {\n        isLoaded: !0,\n        isEmpty: !0\n      }) : {\n        isLoaded: !0,\n        isEmpty: !0\n      };\n    default:\n      return state;\n  }\n}\nfunction errorsReducer() {\n  var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : [],\n    action = 1 < arguments.length ? arguments[1] : void 0;\n  switch (action.type) {\n    case LOGIN_ERROR:\n    case UNAUTHORIZED_ERROR:\n      if (!Array.isArray(state)) throw new Error(\"Errors state must be an array\");\n      return [].concat(_toConsumableArray(state), [action.authError]);\n    case LOGOUT:\n    case CLEAR_ERRORS:\n      if (action.preserve && action.preserve.errors) {\n        if (\"function\" != typeof action.preserve.errors) throw new Error(\"Preserve for the errors state currently only supports functions\");\n        return state.filter(action.preserve.errors);\n      }\n      return [];\n    default:\n      return state;\n  }\n}\nfunction listenersById() {\n  var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {},\n    _ref4 = 1 < arguments.length ? arguments[1] : void 0,\n    type = _ref4.type,\n    path = _ref4.path,\n    payload = _ref4.payload;\n  return type === SET_LISTENER ? _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, payload.id, {\n    id: payload.id,\n    path: path\n  })) : type === UNSET_LISTENER ? (0, _omit2.default)(state, [payload.id]) : state;\n}\nfunction allListeners() {\n  var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : [],\n    _ref5 = 1 < arguments.length ? arguments[1] : void 0,\n    type = _ref5.type,\n    path = _ref5.path,\n    payload = _ref5.payload;\n  return type === SET_LISTENER ? [].concat(_toConsumableArray(state), [payload.id]) : type === UNSET_LISTENER ? state.filter(function (lId) {\n    return lId !== payload.id;\n  }) : state;\n}\nvar listenersReducer = (0, _reducers.combineReducers)({\n  byId: listenersById,\n  allIds: allListeners\n});\nexports.listenersReducer = listenersReducer;\nvar dataReducer = createDataReducer();\nexports.dataReducer = dataReducer;\nvar orderedReducer = createDataReducer(\"ordered\");\nexports.orderedReducer = orderedReducer;","map":{"version":3,"sources":["../src/reducers.js"],"names":["START","SET","SET_PROFILE","MERGE","LOGIN","LOGOUT","LOGIN_ERROR","CLEAR_ERRORS","REMOVE","NO_VALUE","SET_LISTENER","UNSET_LISTENER","AUTHENTICATION_INIT_STARTED","AUTHENTICATION_INIT_FINISHED","AUTH_EMPTY_CHANGE","AUTH_LINK_SUCCESS","UNAUTHORIZED_ERROR","AUTH_UPDATE_SUCCESS","AUTH_RELOAD_SUCCESS","PROFILE_UPDATE_SUCCESS","actionTypes","isInitializingReducer","state","action","type","requestingReducer","path","requestedReducer","timestampsReducer","Date","now","createDataReducer","actionKey","Object","previousData","mergedData","preserve","Array","isArray","Error","authReducer","isLoaded","isEmpty","auth","toJSON","payload","reauthenticate","authErrorReducer","authError","profileReducer","profile","assign","errorsReducer","errors","filter","listenersById","id","allListeners","lId","listenersReducer","byId","allIds","dataReducer","orderedReducer"],"mappings":"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","sourcesContent":["import { pick, omit, get, isObject } from 'lodash'\nimport { setWith, assign } from 'lodash/fp'\nimport { actionTypes } from './constants'\nimport {\n  getSlashStrPath,\n  getDotStrPath,\n  recursiveUnset,\n  combineReducers,\n  preserveValuesFromState\n} from './utils/reducers'\n\nconst {\n  START,\n  SET,\n  SET_PROFILE,\n  MERGE,\n  LOGIN,\n  LOGOUT,\n  LOGIN_ERROR,\n  CLEAR_ERRORS,\n  REMOVE,\n  NO_VALUE,\n  SET_LISTENER,\n  UNSET_LISTENER,\n  AUTHENTICATION_INIT_STARTED,\n  AUTHENTICATION_INIT_FINISHED,\n  AUTH_EMPTY_CHANGE,\n  AUTH_LINK_SUCCESS,\n  UNAUTHORIZED_ERROR,\n  AUTH_UPDATE_SUCCESS,\n  AUTH_RELOAD_SUCCESS,\n  PROFILE_UPDATE_SUCCESS\n} = actionTypes\n\n/**\n * Reducer for isInitializing state. Changed by `AUTHENTICATION_INIT_STARTED`\n * and `AUTHENTICATION_INIT_FINISHED` actions.\n * @param  {object} [state=false] - Current isInitializing redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport function isInitializingReducer(state = false, action) {\n  switch (action.type) {\n    case AUTHENTICATION_INIT_STARTED:\n      return true\n    case AUTHENTICATION_INIT_FINISHED:\n      return false\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for requesting state.Changed by `START`, `NO_VALUE`, and `SET` actions.\n * @param  {object} [state={}] - Current requesting redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @param  {string} action.path - Path of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport function requestingReducer(state = {}, { type, path }) {\n  switch (type) {\n    case START:\n      return {\n        ...state,\n        [getSlashStrPath(path)]: true\n      }\n    case NO_VALUE:\n    case SET:\n      return {\n        ...state,\n        [getSlashStrPath(path)]: false\n      }\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for requested state. Changed by `START`, `NO_VALUE`, and `SET` actions.\n * @param  {object} [state={}] - Current requested redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @param  {string} action.path - Path of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport function requestedReducer(state = {}, { type, path }) {\n  switch (type) {\n    case START:\n      return {\n        ...state,\n        [getSlashStrPath(path)]: false\n      }\n    case NO_VALUE:\n    case SET:\n      return {\n        ...state,\n        [getSlashStrPath(path)]: true\n      }\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for timestamps state. Changed by `START`, `NO_VALUE`, and `SET` actions.\n * @param  {object} [state={}] - Current timestamps redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @param  {string} action.path - Path of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport function timestampsReducer(state = {}, { type, path }) {\n  switch (type) {\n    case START:\n    case NO_VALUE:\n    case SET:\n      return {\n        ...state,\n        [getSlashStrPath(path)]: Date.now()\n      }\n    default:\n      return state\n  }\n}\n\n/**\n * Creates reducer for data state. Used to create data and ordered reducers.\n * Changed by `SET` or `SET_ORDERED` (if actionKey === 'ordered'), `MERGE`,\n * `NO_VALUE`, and `LOGOUT` actions.\n * @param {string} actionKey - Key of state for which to make reducer (data or ordered)\n * @returns {Function} Data reducer\n * @private\n */\nfunction createDataReducer(actionKey = 'data') {\n  /**\n   * Creates reducer for data state. Used to create data and ordered reducers.\n   * Changed by `SET` or `SET_ORDERED` (if actionKey === 'ordered'), `MERGE`,\n   * `NO_VALUE`, and `LOGOUT` actions.\n   * @param {object} [state={}] - Current data redux state\n   * @param {object} action - Object containing the action that was dispatched\n   * @param {string} action.type - Type of action that was dispatched\n   * @param {string} action.path - Path of action that was dispatched\n   * @returns {object} Data state after reduction\n   * @private\n   */\n  return function dataReducer(state = {}, action) {\n    switch (action.type) {\n      case SET:\n        return setWith(\n          Object,\n          getDotStrPath(action.path),\n          action[actionKey],\n          state\n        )\n      case MERGE:\n        const previousData = get(state, getDotStrPath(action.path), {}) // eslint-disable-line no-case-declarations\n        const mergedData = assign(previousData, action[actionKey]) // eslint-disable-line no-case-declarations\n        return setWith(Object, getDotStrPath(action.path), mergedData, state)\n      case NO_VALUE:\n        return setWith(Object, getDotStrPath(action.path), null, state)\n      case REMOVE:\n        if (actionKey === 'data') {\n          return recursiveUnset(getDotStrPath(action.path), state)\n        }\n        return state\n      case LOGOUT:\n        // support keeping data when logging out - #125\n        if (action.preserve) {\n          if (Array.isArray(action.preserve)) {\n            return pick(state, action.preserve) // pick returns a new object\n          } else if (isObject(action.preserve)) {\n            return action.preserve[actionKey]\n              ? preserveValuesFromState(state, action.preserve[actionKey], {})\n              : {}\n          }\n          throw new Error(\n            'Invalid preserve parameter. It must be an Object or an Array'\n          )\n        }\n        return {}\n      default:\n        return state\n    }\n  }\n}\n\n/**\n * Reducer for auth state. Changed by `LOGIN`, `LOGOUT`, and `LOGIN_ERROR` actions.\n * @param  {object} [state={isLoaded: false}] - Current auth redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport function authReducer(\n  state = { isLoaded: false, isEmpty: true },\n  action\n) {\n  switch (action.type) {\n    case LOGIN:\n    case AUTH_UPDATE_SUCCESS:\n      if (!action.auth) {\n        return {\n          isEmpty: true,\n          isLoaded: true\n        }\n      }\n      const auth = action.auth.toJSON ? action.auth.toJSON() : action.auth // eslint-disable-line no-case-declarations\n      // Support keeping data\n      if (action.preserve && action.preserve.auth) {\n        return preserveValuesFromState(state, action.preserve.auth, {\n          ...auth,\n          isEmpty: false,\n          isLoaded: true\n        })\n      }\n      return { ...auth, isEmpty: false, isLoaded: true }\n    case AUTH_LINK_SUCCESS:\n    case AUTH_RELOAD_SUCCESS:\n      if (!action.payload) {\n        return {\n          isEmpty: true,\n          isLoaded: true\n        }\n      }\n      return {\n        ...(action.payload.toJSON ? action.payload.toJSON() : action.payload),\n        isEmpty: false,\n        isLoaded: true\n      }\n    case LOGIN_ERROR:\n    case AUTH_EMPTY_CHANGE:\n    case LOGOUT:\n      // If it's reauthenticate keep user datas\n      if (action.reauthenticate) {\n        return preserveValuesFromState(state, true, {})\n      }\n      // Support keeping data when logging out\n      if (action.preserve && action.preserve.auth) {\n        return preserveValuesFromState(state, action.preserve.auth, {\n          isLoaded: true,\n          isEmpty: true\n        })\n      }\n      return { isLoaded: true, isEmpty: true }\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for authError state. Changed by `LOGIN`, `LOGOUT`, `LOGIN_ERROR`, and\n * `UNAUTHORIZED_ERROR` actions.\n * @param  {object} [state={}] - Current authError redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @returns {object} authError state after reduction\n */\nexport function authErrorReducer(state = null, action) {\n  switch (action.type) {\n    case LOGIN:\n    case LOGOUT:\n      return null\n    case LOGIN_ERROR:\n    case UNAUTHORIZED_ERROR:\n      return action.authError\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for profile state. Changed by `SET_PROFILE`, `LOGOUT`, and\n * `LOGIN_ERROR` actions.\n * @param  {object} [state={isLoaded: false}] - Current profile redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport function profileReducer(\n  state = { isLoaded: false, isEmpty: true },\n  action\n) {\n  switch (action.type) {\n    case SET_PROFILE:\n      if (!action.profile) {\n        return {\n          ...state,\n          isEmpty: true,\n          isLoaded: true\n        }\n      }\n      return {\n        ...action.profile,\n        isEmpty: false,\n        isLoaded: true\n      }\n    case PROFILE_UPDATE_SUCCESS:\n      return Object.assign({}, state, action.payload)\n    case LOGIN:\n      // Support keeping data when logging out\n      if (action.preserve && action.preserve.profile) {\n        return preserveValuesFromState(state, action.preserve.profile, {\n          isLoaded: true,\n          isEmpty: true\n        })\n      }\n      return {\n        isEmpty: true,\n        isLoaded: false\n      }\n    case LOGOUT:\n    case AUTH_EMPTY_CHANGE:\n      // Support keeping data when logging out\n      if (action.preserve && action.preserve.profile) {\n        return preserveValuesFromState(state, action.preserve.profile, {\n          isLoaded: true,\n          isEmpty: true\n        })\n      }\n      return { isLoaded: true, isEmpty: true }\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for errors state. Changed by `UNAUTHORIZED_ERROR`, `CLEAR_ERRORS`,\n * and `LOGOUT` actions.\n * @param  {object} [state=[]] - Current errors redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @param  {Function} action.preserve - `not required` Filter function for\n * preserving errors\n * @returns {object} Profile state after reduction\n */\nexport function errorsReducer(state = [], action) {\n  switch (action.type) {\n    case LOGIN_ERROR:\n    case UNAUTHORIZED_ERROR:\n      if (!Array.isArray(state)) {\n        throw new Error('Errors state must be an array')\n      }\n      return [...state, action.authError]\n    case LOGOUT:\n    case CLEAR_ERRORS:\n      // Support keeping errors through a filter function\n      if (action.preserve && action.preserve.errors) {\n        if (typeof action.preserve.errors !== 'function') {\n          throw new Error(\n            'Preserve for the errors state currently only supports functions'\n          )\n        }\n        return state.filter(action.preserve.errors) // run filter function on state\n      }\n      return []\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for listeners ids. Changed by `SET_LISTENER` and `UNSET_LISTENER`\n * actions.\n * @param {object} [state={}] - Current listenersById redux state\n * @param {object} action - Object containing the action that was dispatched\n * @param {string} action.type - Type of action that was dispatched\n * @param {string} action.path - Path of action that was dispatched\n * @param {object} action.payload - Payload object\n * @returns {object} listenersById state after reduction (used in listeners)\n * @private\n */\nfunction listenersById(state = {}, { type, path, payload }) {\n  switch (type) {\n    case SET_LISTENER:\n      return {\n        ...state,\n        [payload.id]: {\n          id: payload.id,\n          path\n        }\n      }\n    case UNSET_LISTENER:\n      return omit(state, [payload.id])\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for listeners state. Changed by `UNAUTHORIZED_ERROR`\n * and `LOGOUT` actions.\n * @param {object} [state=[]] - Current allListeners redux state\n * @param {object} action - Object containing the action that was dispatched\n * @param {string} action.type - Type of action that was dispatched\n * @param {string} action.path - Path of action that was dispatched\n * @param {object} action.payload - Payload object\n * @returns {object} allListeners state after reduction (used in listeners)\n * @private\n */\nfunction allListeners(state = [], { type, path, payload }) {\n  switch (type) {\n    case SET_LISTENER:\n      return [...state, payload.id]\n    case UNSET_LISTENER:\n      return state.filter((lId) => lId !== payload.id)\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for listeners state. Changed by `UNAUTHORIZED_ERROR`\n * and `LOGOUT` actions.\n * @param  {object} [state=[]] - Current listeners redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport const listenersReducer = combineReducers({\n  byId: listenersById,\n  allIds: allListeners\n})\n\n/**\n * Reducer for data state. Changed by `SET`, `SET_ORDERED`,`NO_VALUE`, and\n * `LOGOUT` actions.\n * @param  {object} [state={}] - Current data redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @param  {string} action.path - Path of action that was dispatched\n * @returns {object} Data state after reduction\n */\nexport const dataReducer = createDataReducer()\n\n/**\n * Reducer for ordered state. Changed by `SET`, `SET_ORDERED`,`NO_VALUE`, and\n * `LOGOUT` actions.\n * @param  {object} [state={}] - Current data redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @param  {string} action.path - Path of action that was dispatched\n * @returns {object} Data state after reduction\n */\nexport const orderedReducer = createDataReducer('ordered')\n"]},"metadata":{},"sourceType":"script"}