{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.renderPasswordResetConfirmation = renderPasswordResetConfirmation;\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _success_pane = require('../../ui/box/success_pane');\nvar _success_pane2 = _interopRequireDefault(_success_pane);\nvar _actions = require('../../core/actions');\nvar _index = require('../../core/index');\nvar l = _interopRequireWildcard(_index);\nvar _i18n = require('../../i18n');\nvar i18n = _interopRequireWildcard(_i18n);\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n// TODO: can't we get this from props?\n\nvar PasswordResetConfirmation = function (_React$Component) {\n  _inherits(PasswordResetConfirmation, _React$Component);\n  function PasswordResetConfirmation() {\n    _classCallCheck(this, PasswordResetConfirmation);\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n  PasswordResetConfirmation.prototype.handleClose = function handleClose() {\n    var _props = this.props,\n      closeHandler = _props.closeHandler,\n      lock = _props.lock;\n    closeHandler(l.id(lock));\n  };\n  PasswordResetConfirmation.prototype.render = function render() {\n    var lock = this.props.lock;\n    var closeHandler = l.ui.closable(lock) ? this.handleClose.bind(this) : undefined;\n    return _react2.default.createElement(_success_pane2.default, {\n      lock: lock,\n      closeHandler: closeHandler\n    }, _react2.default.createElement('p', null, i18n.html(this.props.lock, ['success', 'forgotPassword'])));\n  };\n  return PasswordResetConfirmation;\n}(_react2.default.Component);\nexports.default = PasswordResetConfirmation;\nPasswordResetConfirmation.propTypes = {\n  closeHandler: _propTypes2.default.func.isRequired,\n  lock: _propTypes2.default.object.isRequired\n};\nfunction renderPasswordResetConfirmation(m) {\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  props.closeHandler = _actions.closeLock;\n  props.key = 'auxiliarypane';\n  props.lock = m;\n  return m.get('passwordResetted') ? _react2.default.createElement(PasswordResetConfirmation, props) : null;\n}","map":null,"metadata":{},"sourceType":"script"}